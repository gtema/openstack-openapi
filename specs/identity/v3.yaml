openapi: 3.1.0
info:
  title: OpenStack Identity API
  description: |-
    Identity API provided by Keystone service
  version: '3.0'
paths:
  /:
    get:
      description: |-
        GET operation on /
      operationId: versions:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootGetResponse'
      tags:
        - versions
    head:
      description: |-
        HEAD operation on /
      operationId: versions:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - versions
  /v3:
    get:
      description: |-
        GET operation on /v3
      operationId: version:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootGetResponse'
      tags:
        - versions
    head:
      description: |-
        HEAD operation on /v3
      operationId: version:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - versions
  /v3/auth/projects:
    get:
      description: |+
        New in version 3.3

        This call returns the list of projects that are available to be scoped
        to based on the X-Auth-Token provided in the request.

        The structure of the response is exactly the same as listing projects
        for a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth\_projects`

      operationId: auth/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProjectsGetResponse'
      tags:
        - auth
      summary: Get available project scopes
    head:
      description: |-
        Get possible project scopes for token.

        GET/HEAD /v3/auth/projects
        GET/HEAD /v3/OS-FEDERATION/projects
      operationId: auth/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/OS-FEDERATION/projects:
    get:
      description: |-
        Get possible project scopes for token.

        GET/HEAD /v3/auth/projects
        GET/HEAD /v3/OS-FEDERATION/projects
      operationId: OS-FEDERATION/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationProjectsGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        Get possible project scopes for token.

        GET/HEAD /v3/auth/projects
        GET/HEAD /v3/OS-FEDERATION/projects
      operationId: OS-FEDERATION/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/auth/domains:
    get:
      description: |+
        New in version 3.3

        This call returns the list of domains that are available to be scoped
        to based on the X-Auth-Token provided in the request.

        The structure is the same as listing domains.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth\_domains`

      operationId: auth/domains:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthDomainsGetResponse'
      tags:
        - auth
      summary: Get available domain scopes
    head:
      description: |-
        Get possible domain scopes for token.

        GET/HEAD /v3/auth/domains
        GET/HEAD /v3/OS-FEDERATION/domains
      operationId: auth/domains:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/OS-FEDERATION/domains:
    get:
      description: |-
        Get possible domain scopes for token.

        GET/HEAD /v3/auth/domains
        GET/HEAD /v3/OS-FEDERATION/domains
      operationId: OS-FEDERATION/domains:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationDomainsGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        Get possible domain scopes for token.

        GET/HEAD /v3/auth/domains
        GET/HEAD /v3/OS-FEDERATION/domains
      operationId: OS-FEDERATION/domains:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/auth/system:
    get:
      description: |+
        New in version 3.10

        This call returns the list of systems that are available to be scoped
        to based on the X-Auth-Token provided in the request.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth\_system`

      operationId: auth/system:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSystemGetResponse'
      tags:
        - auth
      summary: Get available system scopes
    head:
      description: |-
        Get possible system scopes for token.

        GET/HEAD /v3/auth/system
      operationId: auth/system:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/catalog:
    get:
      description: |+
        New in version 3.3

        This call returns a service catalog for the X-Auth-Token provided in the
        request, even if the token does not contain a catalog itself (for example,
        if it was generated using ?nocatalog).

        The structure of the catalog object is identical to that contained in a token.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth\_catalog`

      operationId: auth/catalog:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthCatalogGetResponse'
      tags:
        - auth
      summary: Get service catalog
    head:
      description: |-
        Get service catalog for token.

        GET/HEAD /v3/auth/catalog
      operationId: auth/catalog:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/tokens/OS-PKI/revoked:
    get:
      description: |+
        Lists revoked PKI tokens.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/rel/tokens/OS-PKI/revoked`

      operationId: auth/tokens/OS-PKI/revoked:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokensOs_PkiRevokedGetResponse'
      tags:
        - auth
      summary: List revoked tokens
    head:
      description: |-
        Deprecated; get revoked token list.

        GET/HEAD /v3/auth/tokens/OS-PKI/revoked
      operationId: auth/tokens/OS-PKI/revoked:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/tokens:
    get:
      parameters:
        - $ref: '#/components/parameters/X-Auth-Token'
        - $ref: '#/components/parameters/X-Subject-Token'
      description: |+
        Validates and shows information for a token, including its expiration date and authorization scope.

        Pass your own token in the `X-Auth-Token` request header.

        Pass the token that you want to validate in the `X-Subject-Token`
        request header.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth\_tokens`

      operationId: auth/tokens:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokensGetResponse'
          headers:
            X-Subject-Token:
              $ref: '#/components/headers/X-Subject-Token'
      tags:
        - auth
      summary: Validate and show information for token
    post:
      description: |+
        To authenticate with an application credential, specify
        “application\_credential” as the auth method. You are not allowed to request a
        scope, as the scope is retrieved from the application credential.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth\_tokens`

      operationId: auth/tokens:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokensPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokensPostResponse'
          headers:
            X-Subject-Token:
              $ref: '#/components/headers/X-Subject-Token'
      tags:
        - auth
      security: []
      summary: Authenticating with an Application Credential
    delete:
      description: |+
        Revokes a token.

        This call is similar to the HEAD `/auth/tokens` call except that
        the `X-Subject-Token` token is immediately not valid, regardless
        of the `expires\_at` attribute value. An additional
        `X-Auth-Token` is not required.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth\_tokens`

      operationId: auth/tokens:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
          headers: {}
      tags:
        - auth
      summary: Revoke token
    head:
      description: |+
        Validates a token.

        This call is similar to `GET /auth/tokens` but no response body
        is provided even in the `X-Subject-Token` header.

        The Identity API returns the same response as when the subject
        token was issued by `POST /auth/tokens` even if an error occurs
        because the token is not valid. An HTTP `204` response code
        indicates that the `X-Subject-Token` is valid.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/auth\_tokens`

      operationId: auth/tokens:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          headers: {}
      tags:
        - auth
      summary: Check token
  /v3/auth/OS-FEDERATION/saml2:
    get:
      description: |-
        GET operation on /v3/auth/OS-FEDERATION/saml2
      operationId: auth/OS-FEDERATION/saml2:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationSaml2GetResponse'
      tags:
        - auth
    post:
      description: |-
        Exchange a scoped token for a SAML assertion.

        POST /v3/auth/OS-FEDERATION/saml2
      operationId: auth/OS-FEDERATION/saml2:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthOs_FederationSaml2PostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationSaml2PostResponse'
      tags:
        - auth
    head:
      description: |-
        HEAD operation on /v3/auth/OS-FEDERATION/saml2
      operationId: auth/OS-FEDERATION/saml2:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/OS-FEDERATION/saml2/ecp:
    get:
      description: |-
        GET operation on /v3/auth/OS-FEDERATION/saml2/ecp
      operationId: auth/OS-FEDERATION/saml2/ecp:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationSaml2EcpGetResponse'
      tags:
        - auth
    post:
      description: |-
        Exchange a scoped token for an ECP assertion.

        POST /v3/auth/OS-FEDERATION/saml2/ecp
      operationId: auth/OS-FEDERATION/saml2/ecp:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthOs_FederationSaml2EcpPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationSaml2EcpPostResponse'
      tags:
        - auth
    head:
      description: |-
        HEAD operation on /v3/auth/OS-FEDERATION/saml2/ecp
      operationId: auth/OS-FEDERATION/saml2/ecp:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/OS-FEDERATION/websso/{protocol_id}:
    parameters:
      - $ref: '#/components/parameters/auth_OS_FEDERATION_websso_protocol_id'
    get:
      description: |-
        GET operation on /v3/auth/OS-FEDERATION/websso/{protocol_id}
      operationId: auth/OS-FEDERATION/websso/protocol_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationWebssoGetResponse'
      tags:
        - auth
    post:
      description: |-
        POST operation on /v3/auth/OS-FEDERATION/websso/{protocol_id}
      operationId: auth/OS-FEDERATION/websso/protocol_id:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthOs_FederationWebssoPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationWebssoPostResponse'
      tags:
        - auth
    head:
      description: |-
        HEAD operation on /v3/auth/OS-FEDERATION/websso/{protocol_id}
      operationId: auth/OS-FEDERATION/websso/protocol_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso:
    parameters:
      - $ref: '#/components/parameters/auth_OS_FEDERATION_identity_providers_idp_id'
      - $ref: '#/components/parameters/auth_OS_FEDERATION_identity_providers_protocols_protocol_id'
    get:
      description: |-
        GET operation on /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso
      operationId: auth/OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/websso:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationIdentity_ProvidersProtocolsWebssoGetResponse'
      tags:
        - auth
    post:
      description: |-
        POST operation on /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso
      operationId: auth/OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/websso:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthOs_FederationIdentity_ProvidersProtocolsWebssoPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthOs_FederationIdentity_ProvidersProtocolsWebssoPostResponse'
      tags:
        - auth
    head:
      description: |-
        HEAD operation on /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso
      operationId: auth/OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/websso:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - auth
  /v3/credentials/{credential_id}:
    parameters:
      - $ref: '#/components/parameters/credentials_credential_id'
    get:
      description: |+
        Shows details for a credential.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/credential`

      operationId: credentials/credential_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialGetResponse'
      tags:
        - credentials
      summary: Show credential details
    delete:
      description: |+
        Deletes a credential.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/credential`

      operationId: credentials/credential_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - credentials
      summary: Delete credential
    patch:
      description: |+
        Updates a credential.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/credential`

      operationId: credentials/credential_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialPatchResponse'
      tags:
        - credentials
      summary: Update credential
    head:
      description: |-
        HEAD operation on /v3/credentials/{credential_id}
      operationId: credentials/credential_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - credentials
  /v3/credentials:
    get:
      description: |+
        Lists all credentials.

        Optionally, you can include the `user\_id` or `type` query parameter in the
        URI to filter the response by a user or credential type.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/credentials`

      operationId: credentials:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsGetResponse'
      tags:
        - credentials
      summary: List credentials
    post:
      description: |+
        Creates a credential.

        The following example shows how to create an EC2-style credential.
        The credential blob is a string that contains a JSON-serialized
        dictionary with the `access` and `secret` keys. This format is
        required when you specify the `ec2` type. To specify other
        credentials, such as `access\_key`, change the type and contents
        of the data blob.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/credentials`

      operationId: credentials:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsPostResponse'
      tags:
        - credentials
      summary: Create credential
    head:
      description: |-
        HEAD operation on /v3/credentials
      operationId: credentials:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - credentials
  /v3/domains/{domain_id}:
    parameters:
      - $ref: '#/components/parameters/domains_domain_id'
    get:
      description: |+
        Shows details for a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domains`

      operationId: domains/domain_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainGetResponse'
      tags:
        - domains
      summary: Show domain details
    delete:
      description: |+
        Deletes a domain.
        To minimize the risk of accidentally deleting a domain, you must
        first disable the domain by using the update domain method.

        When you delete a domain, this call also deletes all entities owned
        by it, such as users, groups, and projects, and any credentials and
        granted roles that relate to those entities.

        If you try to delete an enabled domain, this call returns the
        `Forbidden (403)` response code.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain`

      operationId: domains/domain_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - domains
      summary: Delete domain
    patch:
      description: |+
        Updates a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain`

      operationId: domains/domain_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainPatchResponse'
      tags:
        - domains
      summary: Update domain
    head:
      description: |-
        Get domain or list domains.

        GET/HEAD /v3/domains
        GET/HEAD /v3/domains/{domain_id}
      operationId: domains/domain_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
  /v3/domains:
    get:
      description: |+
        Lists all domains.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domains`

      operationId: domains:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsGetResponse'
      tags:
        - domains
      summary: List domains
    post:
      description: |+
        Creates a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domains`

      operationId: domains:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsPostResponse'
      tags:
        - domains
      summary: Create domain
    head:
      description: |-
        Get domain or list domains.

        GET/HEAD /v3/domains
        GET/HEAD /v3/domains/{domain_id}
      operationId: domains:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
  /v3/domains/{domain_id}/config:
    parameters:
      - $ref: '#/components/parameters/domains_domain_id'
    get:
      description: |+
        Shows details for a domain configuration.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_config`

      operationId: domains/domain_id/config:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsConfigGetResponse'
      tags:
        - domains
      summary: Show domain configuration
    delete:
      description: |+
        Deletes a domain configuration.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_config`

      operationId: domains/domain_id/config:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - domains
      summary: Delete domain configuration
    put:
      description: |+
        Creates a domain configuration.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_config`

      operationId: domains/domain_id/config:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainsConfigPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsConfigPutResponse'
      tags:
        - domains
      summary: Create domain configuration
    patch:
      description: |+
        Updates a domain configuration.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_config`

      operationId: domains/domain_id/config:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainsConfigPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsConfigPatchResponse'
      tags:
        - domains
      summary: Update domain configuration
    head:
      description: |-
        Check if config option exists.

        GET/HEAD /v3/domains/{domain_id}/config
        GET/HEAD /v3/domains/{domain_id}/config/{group}
        GET/HEAD /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
  /v3/domains/{domain_id}/config/{group}:
    parameters:
      - $ref: '#/components/parameters/domains_domain_id'
      - $ref: '#/components/parameters/domains_config_group'
    get:
      description: |+
        Shows details for a domain group configuration.

        The API supports only the `identity` and `ldap` groups.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_config\_default`

      operationId: domains/domain_id/config/group:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsConfigGroupGetResponse'
      tags:
        - domains
      summary: Show domain group configuration
    delete:
      description: |+
        Deletes a domain group configuration.

        The API supports only the `identity` and `ldap` groups.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_config\_default`

      operationId: domains/domain_id/config/group:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - domains
      summary: Delete domain group configuration
    patch:
      description: |+
        Updates a domain group configuration.

        The API supports only the `identity` and `ldap` groups. If you
        try to set configuration options for other groups, this call fails
        with the `Forbidden (403)` response code.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_config\_default`

      operationId: domains/domain_id/config/group:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainsConfigGroupPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsConfigGroupPatchResponse'
      tags:
        - domains
      summary: Update domain group configuration
    head:
      description: |-
        Check if config option exists.

        GET/HEAD /v3/domains/{domain_id}/config
        GET/HEAD /v3/domains/{domain_id}/config/{group}
        GET/HEAD /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config/group:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
  /v3/domains/{domain_id}/config/{group}/{option}:
    parameters:
      - $ref: '#/components/parameters/domains_domain_id'
      - $ref: '#/components/parameters/domains_config_group'
      - $ref: '#/components/parameters/domains_config_option'
    get:
      description: |+
        Shows details for a domain group option configuration.

        The API supports only the `identity` and `ldap` groups. For the
        `ldap` group, a valid value is `url` or `user\_tree\_dn`. For
        the `identity` group, a valid value is `driver`.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_config\_default`

      operationId: domains/domain_id/config/group/option:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsConfigGroupOptionGetResponse'
      tags:
        - domains
      summary: Show domain group option configuration
    delete:
      description: |+
        Deletes a domain group option configuration.

        The API supports only the `identity` and `ldap` groups. For the
        `ldap` group, a valid value is `url` or `user\_tree\_dn`. For
        the `identity` group, a valid value is `driver`.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_config\_default`

      operationId: domains/domain_id/config/group/option:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - domains
      summary: Delete domain group option configuration
    patch:
      description: |+
        Updates a domain group option configuration.

        The API supports only the `identity` and `ldap` groups. For the
        `ldap` group, a valid value is `url` or `user\_tree\_dn`. For
        the `identity` group, a valid value is `driver`.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_config\_default`

      operationId: domains/domain_id/config/group/option:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainsConfigGroupOptionPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsConfigGroupOptionPatchResponse'
      tags:
        - domains
      summary: Update domain group option configuration
    head:
      description: |-
        Check if config option exists.

        GET/HEAD /v3/domains/{domain_id}/config
        GET/HEAD /v3/domains/{domain_id}/config/{group}
        GET/HEAD /v3/domains/{domain_id}/config/{group}/{option}
      operationId: domains/domain_id/config/group/option:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
  /v3/domains/config/default:
    get:
      description: |+
        The default configuration settings for the options that can be overridden
        can be retrieved.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_config\_default`

      operationId: domains/config/default:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsConfigDefaultGetResponse'
      tags:
        - domains
      summary: Show default configuration settings
    head:
      description: |-
        Get default domain config.

        GET/HEAD /v3/domains/config/default
      operationId: domains/config/default:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
  /v3/domains/config/{group}/default:
    parameters:
      - $ref: '#/components/parameters/domains_config_group'
    get:
      description: |+
        Reads the default configuration settings for a specific group.

        The API supports only the `identity` and `ldap` groups.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_config\_default`

      operationId: domains/config/group/default:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsConfigDefaultGetResponse'
      tags:
        - domains
      summary: Show default configuration for a group
    head:
      description: |-
        Get default domain group config.

        GET/HEAD /v3/domains/config/{group}/default
      operationId: domains/config/group/default:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
  /v3/domains/config/{group}/{option}/default:
    parameters:
      - $ref: '#/components/parameters/domains_config_group'
      - $ref: '#/components/parameters/domains_config_option'
    get:
      description: |+
        Reads the default configuration setting for an option within a group.

        The API supports only the `identity` and `ldap` groups. For the
        `ldap` group, a valid value is `url` or `user\_tree\_dn`. For
        the `identity` group, a valid value is `driver`.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_config\_default`

      operationId: domains/config/group/option/default:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsConfigDefaultGroupGetResponse'
      tags:
        - domains
      summary: Show default option for a group
    head:
      description: |-
        Get default domain group option config.

        GET/HEAD /v3/domains/config/{group}/{option}/default
      operationId: domains/config/group/option/default:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
  /v3/domains/{domain_id}/users/{user_id}/roles:
    parameters:
      - $ref: '#/components/parameters/domains_domain_id'
      - $ref: '#/components/parameters/domains_users_user_id'
    get:
      description: |+
        Lists role assignments for a user on a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_user\_roles`

      operationId: domains/domain_id/users/user_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsUsersRolesGetResponse'
      tags:
        - domains
      summary: List role assignments for user on domain
    head:
      description: |-
        Get user grant.

        GET/HEAD /v3/domains/{domain_id}/users/{user_id}/roles
      operationId: domains/domain_id/users/user_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
  /v3/domains/{domain_id}/users/{user_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/domains_domain_id'
      - $ref: '#/components/parameters/domains_users_user_id'
      - $ref: '#/components/parameters/domains_users_roles_role_id'
    get:
      description: |-
        Check if a user has a specific role on the domain.

        GET/HEAD /v3/domains/{domain_id}/users/{user_id}/roles/{role_id}
      operationId: domains/domain_id/users/user_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsUsersRoleGetResponse'
      tags:
        - domains
    delete:
      description: |+
        Unassigns a role from a user on a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_user\_role`

      operationId: domains/domain_id/users/user_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - domains
      summary: Unassigns role from user on domain
    put:
      description: |+
        Assigns a role to a user on a domain.

        Relationship: `https://developer.openstack.org/api-ref/identity/v3/index.html#assign-role-to-user-on-domain`

      operationId: domains/domain_id/users/user_id/roles/role_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainsUsersRolePutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsUsersRolePutResponse'
      tags:
        - domains
      summary: Assign role to user on domain
    head:
      description: |+
        Validates that a user has a role assignment on a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_user\_role`

      operationId: domains/domain_id/users/user_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
      summary: Check whether user has role assignment on domain
  /v3/domains/{domain_id}/groups/{group_id}/roles:
    parameters:
      - $ref: '#/components/parameters/domains_domain_id'
      - $ref: '#/components/parameters/domains_groups_group_id'
    get:
      description: |+
        Lists role assignments for a group on a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_group\_roles`

      operationId: domains/domain_id/groups/group_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsGroupsRolesGetResponse'
      tags:
        - domains
      summary: List role assignments for group on domain
    head:
      description: |-
        List all domain grats for a specific group.

        GET/HEAD /v3/domains/{domain_id}/groups/{group_id}/roles
      operationId: domains/domain_id/groups/group_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
  /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/domains_domain_id'
      - $ref: '#/components/parameters/domains_groups_group_id'
      - $ref: '#/components/parameters/domains_groups_roles_role_id'
    get:
      description: |-
        Check if a group has a specific role on a domain.

        GET/HEAD /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id}
      operationId: domains/domain_id/groups/group_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsGroupsRoleGetResponse'
      tags:
        - domains
    delete:
      description: |+
        Unassigns a role from a group on a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_group\_role`

      operationId: domains/domain_id/groups/group_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - domains
      summary: Unassign role from group on domain
    put:
      description: |+
        Assigns a role to a group on a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_group\_role`

      operationId: domains/domain_id/groups/group_id/roles/role_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DomainsGroupsRolePutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainsGroupsRolePutResponse'
      tags:
        - domains
      summary: Assign role to group on domain
    head:
      description: |+
        Validates that a group has a role assignment on a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/domain\_group\_role`

      operationId: domains/domain_id/groups/group_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - domains
      summary: Check whether group has role assignment on domain
  /v3/ec2tokens:
    get:
      description: |-
        GET operation on /v3/ec2tokens
      operationId: ec2tokens:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ec2TokensGetResponse'
      tags:
        - ec2tokens
    post:
      description: |-
        Authenticate ec2 token.

        POST /v3/ec2tokens
      operationId: ec2tokens:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ec2TokensPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ec2TokensPostResponse'
      tags:
        - ec2tokens
    head:
      description: |-
        HEAD operation on /v3/ec2tokens
      operationId: ec2tokens:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - ec2tokens
  /v3/endpoints/{endpoint_id}:
    parameters:
      - $ref: '#/components/parameters/endpoints_endpoint_id'
    get:
      description: |+
        Shows details for an endpoint.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/endpoints`

      operationId: endpoints/endpoint_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointGetResponse'
      tags:
        - endpoints
      summary: Show endpoint details
    delete:
      description: |+
        Deletes an endpoint.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/endpoint`

      operationId: endpoints/endpoint_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - endpoints
      summary: Delete endpoint
    patch:
      description: |+
        Updates an endpoint.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/endpoint`

      operationId: endpoints/endpoint_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointPatchResponse'
      tags:
        - endpoints
      summary: Update endpoint
    head:
      description: |-
        HEAD operation on /v3/endpoints/{endpoint_id}
      operationId: endpoints/endpoint_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - endpoints
  /v3/endpoints:
    get:
      description: |+
        Lists all available endpoints.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/endpoints`

      operationId: endpoints:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointsGetResponse'
      tags:
        - endpoints
      summary: List endpoints
    post:
      description: |+
        Creates an endpoint.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/endpoints`

      operationId: endpoints:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointsPostResponse'
      tags:
        - endpoints
      summary: Create endpoint
    head:
      description: |-
        HEAD operation on /v3/endpoints
      operationId: endpoints:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - endpoints
  /v3/endpoints/{endpoint_id}/OS-ENDPOINT-POLICY/policy:
    parameters:
      - $ref: '#/components/parameters/endpoints_endpoint_id'
    get:
      description: |-
        GET operation on /v3/endpoints/{endpoint_id}/OS-ENDPOINT-POLICY/policy
      operationId: endpoints/endpoint_id/OS-ENDPOINT-POLICY/policy:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointsOs_Endpoint_PolicyPolicyGetResponse'
      tags:
        - endpoints
    head:
      description: |-
        HEAD operation on /v3/endpoints/{endpoint_id}/OS-ENDPOINT-POLICY/policy
      operationId: endpoints/endpoint_id/OS-ENDPOINT-POLICY/policy:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - endpoints
  /v3/groups/{group_id}:
    parameters:
      - $ref: '#/components/parameters/groups_group_id'
    get:
      description: |+
        Shows details for a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/group`

      operationId: groups/group_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetResponse'
      tags:
        - groups
      summary: Show group details
    delete:
      description: |+
        Deletes a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/group`

      operationId: groups/group_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - groups
      summary: Delete group
    patch:
      description: |+
        Updates a group.

        If the back-end driver does not support this functionality, the
        call returns the `Not Implemented (501)` response code.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/group`

      operationId: groups/group_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupPatchResponse'
      tags:
        - groups
      summary: Update group
    head:
      description: |-
        HEAD operation on /v3/groups/{group_id}
      operationId: groups/group_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - groups
  /v3/groups:
    get:
      description: |+
        Lists groups.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/groups`

      operationId: groups:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsGetResponse'
      tags:
        - groups
      summary: List groups
    post:
      description: |+
        Creates a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/groups`

      operationId: groups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsPostResponse'
      tags:
        - groups
      summary: Create group
    head:
      description: |-
        HEAD operation on /v3/groups
      operationId: groups:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - groups
  /v3/groups/{group_id}/users:
    parameters:
      - $ref: '#/components/parameters/groups_group_id'
    get:
      description: |+
        Lists the users that belong to a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/group\_users`

      operationId: groups/group_id/users:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsUsersGetResponse'
      tags:
        - groups
      summary: List users in group
    head:
      description: |-
        Get list of users in group.

        GET/HEAD /groups/{group_id}/users
      operationId: groups/group_id/users:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - groups
  /v3/groups/{group_id}/users/{user_id}:
    parameters:
      - $ref: '#/components/parameters/groups_group_id'
      - $ref: '#/components/parameters/groups_users_user_id'
    get:
      description: |-
        Check if a user is in a group.

        GET/HEAD /groups/{group_id}/users/{user_id}
      operationId: groups/group_id/users/user_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsUserGetResponse'
      tags:
        - groups
    delete:
      description: |+
        Removes a user from a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/group\_user`

      operationId: groups/group_id/users/user_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - groups
      summary: Remove user from group
    put:
      description: |+
        Adds a user to a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/group\_user`

      operationId: groups/group_id/users/user_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsUserPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupsUserPutResponse'
      tags:
        - groups
      summary: Add user to group
    head:
      description: |+
        Validates that a user belongs to a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/group\_user`

      operationId: groups/group_id/users/user_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - groups
      summary: Check whether user belongs to group
  /v3/limits/{limit_id}:
    parameters:
      - $ref: '#/components/parameters/limits_limit_id'
    get:
      description: |+
        Shows details for a limit.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/limit`

      operationId: limits/limit_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitGetResponse'
      tags:
        - limits
      summary: Show Limit Details
    delete:
      description: |+
        Deletes a limit.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/limit`

      operationId: limits/limit_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - limits
      summary: Delete Limit
    patch:
      description: |+
        Updates the specified limit. It only supports to update `resource\_limit` or
        `description` for the limit.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/limit`

      operationId: limits/limit_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitPatchResponse'
      tags:
        - limits
      summary: Update Limit
    head:
      description: |-
        HEAD operation on /v3/limits/{limit_id}
      operationId: limits/limit_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - limits
  /v3/limits:
    get:
      description: |+
        Lists Limits.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/limits`

      operationId: limits:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsGetResponse'
      tags:
        - limits
      summary: List Limits
    post:
      description: |+
        Creates limits. It supports to create more than one limit in one request.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/limits`

      operationId: limits:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LimitsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsPostResponse'
      tags:
        - limits
      summary: Create Limits
    head:
      description: |-
        HEAD operation on /v3/limits
      operationId: limits:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - limits
  /v3/limits/model:
    get:
      description: |+
        Return the configured limit enforcement model.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/limit\_model`

      operationId: limits/model:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitsModelGetResponse'
      tags:
        - limits
      summary: Get Enforcement Model
    head:
      description: |-
        HEAD operation on /v3/limits/model
      operationId: limits/model:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - limits
  /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_endpoint_group_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupGetResponse'
      tags:
        - OS-EP-FILTER
    delete:
      description: |-
        DELETE operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-EP-FILTER
    patch:
      description: |-
        PATCH operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupPatchResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoint_groups:
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/endpoint_groups
      operationId: OS-EP-FILTER/endpoint_groups:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsGetResponse'
      tags:
        - OS-EP-FILTER
    post:
      description: |-
        POST operation on /v3/OS-EP-FILTER/endpoint_groups
      operationId: OS-EP-FILTER/endpoint_groups:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsPostResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/endpoint_groups
      operationId: OS-EP-FILTER/endpoint_groups:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoints/{endpoint_id}/projects:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoints_endpoint_id'
    get:
      description: |-
        Return a list of projects associated with the endpoint.
      operationId: OS-EP-FILTER/endpoints/endpoint_id/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpointsProjectsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        Return a list of projects associated with the endpoint.
      operationId: OS-EP-FILTER/endpoints/endpoint_id/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_projects_project_id'
      - $ref: '#/components/parameters/OS_EP_FILTER_projects_endpoints_endpoint_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
      operationId: OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpointGetResponse'
      tags:
        - OS-EP-FILTER
    delete:
      description: |-
        DELETE operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
      operationId: OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-EP-FILTER
    put:
      description: |-
        PUT operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
      operationId: OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpointPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpointPutResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id}
      operationId: OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/projects/{project_id}/endpoints:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_projects_project_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints
      operationId: OS-EP-FILTER/projects/project_id/endpoints:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpointsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoints
      operationId: OS-EP-FILTER/projects/project_id/endpoints:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/projects/{project_id}/endpoint_groups:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_projects_project_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoint_groups
      operationId: OS-EP-FILTER/projects/project_id/endpoint_groups:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterProjectsEndpoint_GroupsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/projects/{project_id}/endpoint_groups
      operationId: OS-EP-FILTER/projects/project_id/endpoint_groups:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/endpoints:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_endpoint_group_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/endpoints
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/endpoints:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsEndpointsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/endpoints
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/endpoints:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_endpoint_group_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsProjectsGetResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}:
    parameters:
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_endpoint_group_id'
      - $ref: '#/components/parameters/OS_EP_FILTER_endpoint_groups_projects_project_id'
    get:
      description: |-
        GET operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsProjectGetResponse'
      tags:
        - OS-EP-FILTER
    delete:
      description: |-
        DELETE operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-EP-FILTER
    put:
      description: |-
        PUT operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsProjectPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Ep_FilterEndpoint_GroupsProjectPutResponse'
      tags:
        - OS-EP-FILTER
    head:
      description: |-
        HEAD operation on /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id}
      operationId: OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-EP-FILTER
  /v3/OS-FEDERATION/saml2/metadata:
    get:
      description: |-
        Get SAML2 metadata.

        GET/HEAD /OS-FEDERATION/saml2/metadata
      operationId: OS-FEDERATION/saml2/metadata:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationSaml2MetadataGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        Get SAML2 metadata.

        GET/HEAD /OS-FEDERATION/saml2/metadata
      operationId: OS-FEDERATION/saml2/metadata:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/auth:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_idp_id'
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_protocols_protocol_id'
    get:
      description: |-
        Authenticate from dedicated uri endpoint.

        GET/HEAD /OS-FEDERATION/identity_providers/
                 {idp_id}/protocols/{protocol_id}/auth
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/auth:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolsAuthGetResponse'
      tags:
        - OS-FEDERATION
    post:
      description: |-
        Authenticate from dedicated uri endpoint.

        POST /OS-FEDERATION/identity_providers/
             {idp_id}/protocols/{protocol_id}/auth
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/auth:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolsAuthPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolsAuthPostResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        Authenticate from dedicated uri endpoint.

        GET/HEAD /OS-FEDERATION/identity_providers/
                 {idp_id}/protocols/{protocol_id}/auth
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/auth:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers/{idp_id}:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_idp_id'
    get:
      description: |-
        GET operation on /v3/OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProviderGetResponse'
      tags:
        - OS-FEDERATION
    delete:
      description: |-
        DELETE operation on /v3/OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-FEDERATION
    put:
      description: |-
        Create an idp resource for federated authentication.

        PUT /OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProviderPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProviderPutResponse'
      tags:
        - OS-FEDERATION
    patch:
      description: |-
        PATCH operation on /v3/OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProviderPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProviderPatchResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        HEAD operation on /v3/OS-FEDERATION/identity_providers/{idp_id}
      operationId: OS-FEDERATION/identity_providers/idp_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers:
    get:
      description: |-
        GET operation on /v3/OS-FEDERATION/identity_providers
      operationId: OS-FEDERATION/identity_providers:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        HEAD operation on /v3/OS-FEDERATION/identity_providers
      operationId: OS-FEDERATION/identity_providers:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_idp_id'
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_protocols_protocol_id'
    get:
      description: |-
        Get protocols for an IDP.

        HEAD/GET /OS-FEDERATION/identity_providers/
                 {idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolGetResponse'
      tags:
        - OS-FEDERATION
    delete:
      description: |-
        Delete a protocol from an IDP.

        DELETE /OS-FEDERATION/identity_providers/
               {idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-FEDERATION
    put:
      description: |-
        Create protocol for an IDP.

        PUT /OS-Federation/identity_providers/{idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolPutResponse'
      tags:
        - OS-FEDERATION
    patch:
      description: |-
        Update protocol for an IDP.

        PATCH /OS-FEDERATION/identity_providers/
              {idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolPatchResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        Get protocols for an IDP.

        HEAD/GET /OS-FEDERATION/identity_providers/
                 {idp_id}/protocols/{protocol_id}
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_identity_providers_idp_id'
    get:
      description: |-
        List protocols for an IDP.

        HEAD/GET /OS-FEDERATION/identity_providers/{idp_id}/protocols
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationIdentity_ProvidersProtocolsGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        List protocols for an IDP.

        HEAD/GET /OS-FEDERATION/identity_providers/{idp_id}/protocols
      operationId: OS-FEDERATION/identity_providers/idp_id/protocols:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/mappings/{mapping_id}:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_mappings_mapping_id'
    get:
      description: |-
        GET operation on /v3/OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationMappingGetResponse'
      tags:
        - OS-FEDERATION
    delete:
      description: |-
        Delete a mapping.

        DELETE /OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-FEDERATION
    put:
      description: |-
        Create a mapping.

        PUT /OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationMappingPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationMappingPutResponse'
      tags:
        - OS-FEDERATION
    patch:
      description: |-
        Update a mapping.

        PATCH /OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationMappingPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationMappingPatchResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        HEAD operation on /v3/OS-FEDERATION/mappings/{mapping_id}
      operationId: OS-FEDERATION/mappings/mapping_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/mappings:
    get:
      description: |-
        GET operation on /v3/OS-FEDERATION/mappings
      operationId: OS-FEDERATION/mappings:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationMappingsGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        HEAD operation on /v3/OS-FEDERATION/mappings
      operationId: OS-FEDERATION/mappings:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/service_providers/{sp_id}:
    parameters:
      - $ref: '#/components/parameters/OS_FEDERATION_service_providers_sp_id'
    get:
      description: |-
        GET operation on /v3/OS-FEDERATION/service_providers/{sp_id}
      operationId: OS-FEDERATION/service_providers/sp_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationService_ProviderGetResponse'
      tags:
        - OS-FEDERATION
    delete:
      description: |-
        Delete a service provider.

        DELETE /OS-FEDERATION/service_providers/{sp_id}
      operationId: OS-FEDERATION/service_providers/sp_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-FEDERATION
    put:
      description: |-
        Create a service provider.

        PUT /OS-FEDERATION/service_providers/{sp_id}
      operationId: OS-FEDERATION/service_providers/sp_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationService_ProviderPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationService_ProviderPutResponse'
      tags:
        - OS-FEDERATION
    patch:
      description: |-
        Update a service provider.

        PATCH /OS-FEDERATION/service_providers/{sp_id}
      operationId: OS-FEDERATION/service_providers/sp_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_FederationService_ProviderPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationService_ProviderPatchResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        HEAD operation on /v3/OS-FEDERATION/service_providers/{sp_id}
      operationId: OS-FEDERATION/service_providers/sp_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-FEDERATION/service_providers:
    get:
      description: |-
        GET operation on /v3/OS-FEDERATION/service_providers
      operationId: OS-FEDERATION/service_providers:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_FederationService_ProvidersGetResponse'
      tags:
        - OS-FEDERATION
    head:
      description: |-
        HEAD operation on /v3/OS-FEDERATION/service_providers
      operationId: OS-FEDERATION/service_providers:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-FEDERATION
  /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_domains_domain_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_groups_group_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_groups_roles_role_id'
    get:
      description: |-
        Check for an inherited grant for a group on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/groups/{group_id}
                 /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsGroupsRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
    delete:
      description: |+
        Revokes an inherited project role from a group in a domain.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain\_group\_role\_inherited\_to\_projects`

      operationId: 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Revoke an inherited project role from group on domain
    put:
      description: |+
        The inherited role is only applied to the owned projects (both existing and
        future projects), and will not appear as a role in a domain scoped token.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain\_group\_role\_inherited\_to\_projects`

      operationId: 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_InheritDomainsGroupsRolesInherited_To_ProjectsPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsGroupsRolesInherited_To_ProjectsPutResponse'
      tags:
        - OS-INHERIT
      summary: Assign role to group on projects owned by a domain
    head:
      description: |+
        Checks whether a group has an inherited project role in a domain.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain\_group\_role\_inherited\_to\_projects`

      operationId: 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Check if group has an inherited project role on domain
  /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_domains_domain_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_groups_group_id'
    get:
      description: |+
        The list only contains those role assignments to the domain that were specified
        as being inherited to projects within that domain.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain\_group\_roles\_inherited\_to\_projects`

      operationId: OS-INHERIT/domains/domain_id/groups/group_id/roles/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsGroupsRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
      summary: List group’s inherited project roles on domain
    head:
      description: |-
        List roles (inherited) for a group on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/groups/{group_id}
                 /roles/inherited_to_projects
      operationId: OS-INHERIT/domains/domain_id/groups/group_id/roles/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
  /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/{role_id}/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_domains_domain_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_users_user_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_users_roles_role_id'
    get:
      description: |-
        Check for an inherited grant for a user on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/users/{user_id}/roles
                 /{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsUsersRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
    delete:
      description: |+
        Revokes an inherited project role from a user in a domain.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain\_user\_role\_inherited\_to\_projects`

      operationId: 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Revoke an inherited project role from user on domain
    put:
      description: |+
        Assigns a role to a user in projects owned by a domain.

        The inherited role is only applied to the owned projects (both existing and
        future projects), and will not appear as a role in a domain scoped token.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain\_user\_role\_inherited\_to\_projects`

      operationId: 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_InheritDomainsUsersRolesInherited_To_ProjectsPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsUsersRolesInherited_To_ProjectsPutResponse'
      tags:
        - OS-INHERIT
      summary: Assign role to user on projects owned by domain
    head:
      description: |+
        Checks whether a user has an inherited project role in a domain.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain\_user\_role\_inherited\_to\_projects`

      operationId: 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Check if user has an inherited project role on domain
  /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_domains_domain_id'
      - $ref: '#/components/parameters/OS_INHERIT_domains_users_user_id'
    get:
      description: |+
        The list only contains those role assignments to the domain that were specified
        as being inherited to projects within that domain.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/domain\_user\_roles\_inherited\_to\_projects`

      operationId: OS-INHERIT/domains/domain_id/users/user_id/roles/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritDomainsUsersRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
      summary: List user’s inherited project roles on a domain
    head:
      description: |-
        List roles (inherited) for a user on a domain.

        GET/HEAD /OS-INHERIT/domains/{domain_id}/users/{user_id}
                 /roles/inherited_to_projects
      operationId: OS-INHERIT/domains/domain_id/users/user_id/roles/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
  /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_projects_project_id'
      - $ref: '#/components/parameters/OS_INHERIT_projects_users_user_id'
      - $ref: '#/components/parameters/OS_INHERIT_projects_users_roles_role_id'
    get:
      description: |-
        Check for an inherited grant for a user on a project.

        GET/HEAD /OS-INHERIT/projects/{project_id}/users/{user_id}
                 /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritProjectsUsersRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
    delete:
      description: |+
        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/project\_user\_role\_inherited\_to\_projects`

      operationId: 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Revoke an inherited project role from user on project
    put:
      description: |+
        The inherited role assignment is anchored to a project and applied to its
        subtree in the projects hierarchy (both existing and future projects).

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/project\_user\_role\_inherited\_to\_projects`

      operationId: 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_InheritProjectsUsersRolesInherited_To_ProjectsPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritProjectsUsersRolesInherited_To_ProjectsPutResponse'
      tags:
        - OS-INHERIT
      summary: Assign role to user on projects in a subtree
    head:
      description: |+
        Checks whether a user has a role assignment with the `inherited\_to\_projects` flag in a project.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/project\_user\_role\_inherited\_to\_projects`

      operationId: 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Check if user has an inherited project role on project
  /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects:
    parameters:
      - $ref: '#/components/parameters/OS_INHERIT_projects_project_id'
      - $ref: '#/components/parameters/OS_INHERIT_projects_groups_group_id'
      - $ref: '#/components/parameters/OS_INHERIT_projects_groups_roles_role_id'
    get:
      description: |-
        Check for an inherited grant for a group on a project.

        GET/HEAD /OS-INHERIT/projects/{project_id}/groups/{group_id}
                 /roles/{role_id}/inherited_to_projects
      operationId: 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritProjectsGroupsRolesInherited_To_ProjectsGetResponse'
      tags:
        - OS-INHERIT
    delete:
      description: |+
        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/project\_group\_role\_inherited\_to\_projects`

      operationId: 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Revoke an inherited project role from group on project
    put:
      description: |+
        The inherited role assignment is anchored to a project and applied to its
        subtree in the projects hierarchy (both existing and future projects).

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/project\_group\_role\_inherited\_to\_projects`

      operationId: 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_InheritProjectsGroupsRolesInherited_To_ProjectsPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_InheritProjectsGroupsRolesInherited_To_ProjectsPutResponse'
      tags:
        - OS-INHERIT
      summary: Assign role to group on projects in a subtree
    head:
      description: |+
        Checks whether a group has a role assignment with the `inherited\_to\_projects` flag in a project.

        Relationship:
        `https://docs.openstack.org/api/openstack-identity/3/ext/OS-INHERIT/1.0/rel/project\_group\_role\_inherited\_to\_projects`

      operationId: 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-INHERIT
      summary: Check if group has an inherited project role on project
  /v3/OS-OAUTH1/consumers/{consumer_id}:
    parameters:
      - $ref: '#/components/parameters/OS_OAUTH1_consumers_consumer_id'
    get:
      description: |-
        GET operation on /v3/OS-OAUTH1/consumers/{consumer_id}
      operationId: OS-OAUTH1/consumers/consumer_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1ConsumerGetResponse'
      tags:
        - OS-OAUTH1
    delete:
      description: |-
        DELETE operation on /v3/OS-OAUTH1/consumers/{consumer_id}
      operationId: OS-OAUTH1/consumers/consumer_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-OAUTH1
    patch:
      description: |-
        PATCH operation on /v3/OS-OAUTH1/consumers/{consumer_id}
      operationId: OS-OAUTH1/consumers/consumer_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1ConsumerPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1ConsumerPatchResponse'
      tags:
        - OS-OAUTH1
    head:
      description: |-
        HEAD operation on /v3/OS-OAUTH1/consumers/{consumer_id}
      operationId: OS-OAUTH1/consumers/consumer_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH1/consumers:
    get:
      description: |-
        GET operation on /v3/OS-OAUTH1/consumers
      operationId: OS-OAUTH1/consumers:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1ConsumersGetResponse'
      tags:
        - OS-OAUTH1
    post:
      description: |-
        POST operation on /v3/OS-OAUTH1/consumers
      operationId: OS-OAUTH1/consumers:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1ConsumersPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1ConsumersPostResponse'
      tags:
        - OS-OAUTH1
    head:
      description: |-
        HEAD operation on /v3/OS-OAUTH1/consumers
      operationId: OS-OAUTH1/consumers:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH1/request_token:
    get:
      description: |-
        GET operation on /v3/OS-OAUTH1/request_token
      operationId: OS-OAUTH1/request_token:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1Request_TokenGetResponse'
      tags:
        - OS-OAUTH1
    post:
      description: |-
        POST operation on /v3/OS-OAUTH1/request_token
      operationId: OS-OAUTH1/request_token:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1Request_TokenPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1Request_TokenPostResponse'
      tags:
        - OS-OAUTH1
    head:
      description: |-
        HEAD operation on /v3/OS-OAUTH1/request_token
      operationId: OS-OAUTH1/request_token:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH1/access_token:
    get:
      description: |-
        GET operation on /v3/OS-OAUTH1/access_token
      operationId: OS-OAUTH1/access_token:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1Access_TokenGetResponse'
      tags:
        - OS-OAUTH1
    post:
      description: |-
        POST operation on /v3/OS-OAUTH1/access_token
      operationId: OS-OAUTH1/access_token:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1Access_TokenPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1Access_TokenPostResponse'
      tags:
        - OS-OAUTH1
    head:
      description: |-
        HEAD operation on /v3/OS-OAUTH1/access_token
      operationId: OS-OAUTH1/access_token:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH1/authorize/{request_token_id}:
    parameters:
      - $ref: '#/components/parameters/OS_OAUTH1_authorize_request_token_id'
    put:
      description: |-
        PUT operation on /v3/OS-OAUTH1/authorize/{request_token_id}
      operationId: OS-OAUTH1/authorize/request_token_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth1AuthorizePutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth1AuthorizePutResponse'
      tags:
        - OS-OAUTH1
  /v3/OS-OAUTH2/token:
    get:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth2TokenGetResponse'
      tags:
        - OS-OAUTH2
    post:
      description: |-
        Get an OAuth2.0 Access Token.

        POST /v3/OS-OAUTH2/token
      operationId: OS-OAUTH2/token:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth2TokenPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth2TokenPostResponse'
      tags:
        - OS-OAUTH2
    delete:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-OAUTH2
    put:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth2TokenPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth2TokenPutResponse'
      tags:
        - OS-OAUTH2
    patch:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_Oauth2TokenPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Oauth2TokenPatchResponse'
      tags:
        - OS-OAUTH2
    head:
      description: |-
        The method is not allowed.
      operationId: OS-OAUTH2/token:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-OAUTH2
  /v3/OS-REVOKE/events:
    get:
      description: |-
        GET operation on /v3/OS-REVOKE/events
      operationId: OS-REVOKE/events:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_RevokeEventsGetResponse'
      tags:
        - OS-REVOKE
    head:
      description: |-
        HEAD operation on /v3/OS-REVOKE/events
      operationId: OS-REVOKE/events:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-REVOKE
  /v3/OS-SIMPLE-CERT/ca:
    get:
      description: |-
        GET operation on /v3/OS-SIMPLE-CERT/ca
      operationId: OS-SIMPLE-CERT/ca:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Simple_CertCaGetResponse'
      tags:
        - OS-SIMPLE-CERT
    head:
      description: |-
        HEAD operation on /v3/OS-SIMPLE-CERT/ca
      operationId: OS-SIMPLE-CERT/ca:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-SIMPLE-CERT
  /v3/OS-SIMPLE-CERT/certificates:
    get:
      description: |-
        GET operation on /v3/OS-SIMPLE-CERT/certificates
      operationId: OS-SIMPLE-CERT/certificates:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_Simple_CertCertificatesGetResponse'
      tags:
        - OS-SIMPLE-CERT
    head:
      description: |-
        HEAD operation on /v3/OS-SIMPLE-CERT/certificates
      operationId: OS-SIMPLE-CERT/certificates:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-SIMPLE-CERT
  /v3/policies/{policy_id}:
    parameters:
      - $ref: '#/components/parameters/policies_policy_id'
    get:
      description: |+
        Shows details for a policy.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/policy`

      operationId: policies/policy_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyGetResponse'
      tags:
        - policies
      summary: Show policy details
    delete:
      description: |+
        Deletes a policy.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/policy`

      operationId: policies/policy_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - policies
      summary: Delete policy
    patch:
      description: |+
        Updates a policy.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/policy`

      operationId: policies/policy_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyPatchResponse'
      tags:
        - policies
      summary: Update policy
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}
      operationId: policies/policy_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies:
    get:
      description: |+
        Lists policies.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/policies`

      operationId: policies:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesGetResponse'
      tags:
        - policies
      summary: List policies
    post:
      description: |+
        Creates a policy.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/policies`

      operationId: policies:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesPostResponse'
      tags:
        - policies
      summary: Create policy
    head:
      description: |-
        HEAD operation on /v3/policies
      operationId: policies:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints:
    parameters:
      - $ref: '#/components/parameters/policies_policy_id'
    get:
      description: |-
        GET operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyEndpointsGetResponse'
      tags:
        - policies
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}:
    parameters:
      - $ref: '#/components/parameters/policies_policy_id'
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_endpoints_endpoint_id'
    get:
      description: |-
        GET operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyEndpointGetResponse'
      tags:
        - policies
    delete:
      description: |-
        DELETE operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - policies
    put:
      description: |-
        PUT operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyEndpointPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyEndpointPutResponse'
      tags:
        - policies
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}:
    parameters:
      - $ref: '#/components/parameters/policies_policy_id'
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_services_service_id'
    get:
      description: |-
        GET operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServiceGetResponse'
      tags:
        - policies
    delete:
      description: |-
        DELETE operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - policies
    put:
      description: |-
        PUT operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicePutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicePutResponse'
      tags:
        - policies
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}:
    parameters:
      - $ref: '#/components/parameters/policies_policy_id'
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_services_service_id'
      - $ref: '#/components/parameters/policies_OS_ENDPOINT_POLICY_services_regions_region_id'
    get:
      description: |-
        GET operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicesRegionGetResponse'
      tags:
        - policies
    delete:
      description: |-
        DELETE operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
      operationId: 
        policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - policies
    put:
      description: |-
        PUT operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicesRegionPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PoliciesOs_Endpoint_PolicyServicesRegionPutResponse'
      tags:
        - policies
    head:
      description: |-
        HEAD operation on /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id}
      operationId: policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - policies
  /v3/projects/{project_id}:
    parameters:
      - $ref: '#/components/parameters/projects_project_id'
    get:
      description: |+
        Shows details for a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project`

      operationId: projects/project_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectGetResponse'
      tags:
        - projects
      summary: Show project details
    delete:
      description: |+
        Deletes a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project`

      operationId: projects/project_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Delete project
    patch:
      description: |+
        Updates a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project`

      operationId: projects/project_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectPatchResponse'
      tags:
        - projects
      summary: Update project
    head:
      description: |-
        Get project or list projects.

        GET/HEAD /v3/projects
        GET/HEAD /v3/projects/{project_id}
      operationId: projects/project_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/projects:
    get:
      description: |+
        Lists projects.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`

      operationId: projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsGetResponse'
      tags:
        - projects
      summary: List projects
    post:
      description: |+
        Creates a project, where the project may act as a domain.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`

      operationId: projects:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsPostResponse'
      tags:
        - projects
      summary: Create project
    head:
      description: |-
        Get project or list projects.

        GET/HEAD /v3/projects
        GET/HEAD /v3/projects/{project_id}
      operationId: projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}/tags:
    parameters:
      - $ref: '#/components/parameters/projects_project_id'
    get:
      description: |+
        Lists all tags within a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`

      operationId: projects/project_id/tags:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsTagsGetResponse'
      tags:
        - projects
      summary: List tags for a project
    delete:
      description: |+
        Remove all tags from a given project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`

      operationId: projects/project_id/tags:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Remove all tags from a project
    put:
      description: |+
        Modifies the tags for a project. Any existing tags not specified will
        be deleted.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`

      operationId: projects/project_id/tags:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsTagsPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsTagsPutResponse'
      tags:
        - projects
      summary: Modify tag list for a project
    head:
      description: |-
        List tags associated with a given project.

        GET /v3/projects/{project_id}/tags
      operationId: projects/project_id/tags:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}/tags/{value}:
    parameters:
      - $ref: '#/components/parameters/projects_project_id'
      - $ref: '#/components/parameters/projects_tags_value'
    get:
      description: |+
        Checks if a project contains the specified tag.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`

      operationId: projects/project_id/tags/value:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Check if project contains tag
    delete:
      description: |+
        Remove a single tag from a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`

      operationId: projects/project_id/tags/value:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Delete single tag from project
    put:
      description: |+
        Creates the specified tag and adds it to the list of tags in the project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/projects`

      operationId: projects/project_id/tags/value:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsTagPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsTagPutResponse'
      tags:
        - projects
      summary: Add single tag to a project
    head:
      description: |-
        Get information for a single tag associated with a given project.

        GET /v3/projects/{project_id}/tags/{value}
      operationId: projects/project_id/tags/value:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}/users/{user_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/projects_project_id'
      - $ref: '#/components/parameters/projects_users_user_id'
      - $ref: '#/components/parameters/projects_users_roles_role_id'
    get:
      description: |-
        Check grant for project, user, role.

        GET/HEAD /v3/projects/{project_id/users/{user_id}/roles/{role_id}
      operationId: projects/project_id/users/user_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
    delete:
      description: |+
        Unassigns a role from a user on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project\_user\_role`

      operationId: projects/project_id/users/user_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Unassign role from user on project
    put:
      description: |+
        Assigns a role to a user on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project\_user\_role`

      operationId: projects/project_id/users/user_id/roles/role_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsUsersRolePutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Assign role to user on project
    head:
      description: |+
        Validates that a user has a role on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project\_user\_role`

      operationId: projects/project_id/users/user_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Check whether user has role assignment on project
  /v3/projects/{project_id}/users/{user_id}/roles:
    parameters:
      - $ref: '#/components/parameters/projects_project_id'
      - $ref: '#/components/parameters/projects_users_user_id'
    get:
      description: |+
        Lists role assignments for a user on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project\_user\_role`

      operationId: projects/project_id/users/user_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsUsersRolesGetResponse'
      tags:
        - projects
      summary: List role assignments for user on project
    head:
      description: |-
        List grants for user on project.

        GET/HEAD /v3/projects/{project_id}/users/{user_id}
      operationId: projects/project_id/users/user_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/projects/{project_id}/groups/{group_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/projects_project_id'
      - $ref: '#/components/parameters/projects_groups_group_id'
      - $ref: '#/components/parameters/projects_groups_roles_role_id'
    get:
      description: |-
        Check grant for project, group, role.

        GET/HEAD /v3/projects/{project_id/groups/{group_id}/roles/{role_id}
      operationId: projects/project_id/groups/group_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsGroupsRoleGetResponse'
      tags:
        - projects
    delete:
      description: |+
        Unassigns a role from a group on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project\_group\_role`

      operationId: projects/project_id/groups/group_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - projects
      summary: Unassign role from group on project
    put:
      description: |+
        Assigns a role to a group on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project\_group\_role`

      operationId: projects/project_id/groups/group_id/roles/role_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectsGroupsRolePutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsGroupsRolePutResponse'
      tags:
        - projects
      summary: Assign role to group on project
    head:
      description: |+
        Validates that a group has a role assignment on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project\_group\_role`

      operationId: projects/project_id/groups/group_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
      summary: Check whether group has role assignment on project
  /v3/projects/{project_id}/groups/{group_id}/roles:
    parameters:
      - $ref: '#/components/parameters/projects_project_id'
      - $ref: '#/components/parameters/projects_groups_group_id'
    get:
      description: |+
        Lists role assignments for a group on a project.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/project\_user\_role`

      operationId: projects/project_id/groups/group_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectsGroupsRolesGetResponse'
      tags:
        - projects
      summary: List role assignments for group on project
    head:
      description: |-
        List grants for group on project.

        GET/HEAD /v3/projects/{project_id}/groups/{group_id}
      operationId: projects/project_id/groups/group_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - projects
  /v3/regions/{region_id}:
    parameters:
      - $ref: '#/components/parameters/regions_region_id'
    get:
      description: |+
        Shows details for a region, by ID.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/regions`

      operationId: regions/region_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionGetResponse'
      tags:
        - regions
      summary: Show region details
    delete:
      description: |+
        Deletes a region.

        The following error might occur:

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/region`

      operationId: regions/region_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - regions
      summary: Delete region
    put:
      description: |-
        PUT operation on /v3/regions/{region_id}
      operationId: regions/region_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionPutResponse'
      tags:
        - regions
    patch:
      description: |+
        Updates a region.

        You can update the description or parent region ID for a region.
        You cannot update the region ID.

        The following error might occur:

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/region`

      operationId: regions/region_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionPatchResponse'
      tags:
        - regions
      summary: Update region
    head:
      description: |-
        HEAD operation on /v3/regions/{region_id}
      operationId: regions/region_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - regions
  /v3/regions:
    get:
      description: |+
        Lists regions.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/regions`

      operationId: regions:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionsGetResponse'
      tags:
        - regions
      summary: List regions
    post:
      description: |+
        Creates a region.

        When you create the region, you can optionally specify a region ID.
        If you include characters in the region ID that are not allowed in
        a URI, you must URL-encode the ID. If you omit an ID, the API
        assigns an ID to the region.

        The following errors might occur:

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/regions`

      operationId: regions:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegionsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionsPostResponse'
      tags:
        - regions
      summary: Create region
    head:
      description: |-
        HEAD operation on /v3/regions
      operationId: regions:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - regions
  /v3/registered_limits/{registered_limit_id}:
    parameters:
      - $ref: '#/components/parameters/registered_limits_registered_limit_id'
    get:
      description: |+
        Shows details for a registered limit.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/registered\_limit`

      operationId: registered_limits/registered_limit_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registered_LimitGetResponse'
      tags:
        - registered_limits
      summary: Show Registered Limit Details
    delete:
      description: |+
        Deletes a registered limit.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/registered\_limit`

      operationId: registered_limits/registered_limit_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - registered_limits
      summary: Delete Registered Limit
    patch:
      description: |+
        Updates the specified registered limit.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/registered\_limit`

      operationId: registered_limits/registered_limit_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registered_LimitPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registered_LimitPatchResponse'
      tags:
        - registered_limits
      summary: Update Registered Limit
    head:
      description: |-
        HEAD operation on /v3/registered_limits/{registered_limit_id}
      operationId: registered_limits/registered_limit_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - registered_limits
  /v3/registered_limits:
    get:
      description: |+
        Lists Registered Limits.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/registered\_limits`

      operationId: registered_limits:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registered_LimitsGetResponse'
      tags:
        - registered_limits
      summary: List Registered Limits
    post:
      description: |+
        Creates registered limits. It supports to create more than one registered limit
        in one request.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/registered\_limits`

      operationId: registered_limits:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Registered_LimitsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registered_LimitsPostResponse'
      tags:
        - registered_limits
      summary: Create Registered Limits
    head:
      description: |-
        HEAD operation on /v3/registered_limits
      operationId: registered_limits:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - registered_limits
  /v3/role_assignments:
    get:
      description: |+
        Lists role assignments.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/role\_assignments`

      operationId: role_assignments:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role_AssignmentsGetResponse'
      tags:
        - role_assignments
      summary: List role assignments
    head:
      description: |-
        List all role assignments.

        GET/HEAD /v3/role_assignments
      operationId: role_assignments:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - role_assignments
  /v3/role_inferences:
    get:
      description: |+
        Lists all role inference rules.

        Relationship:
        `https://developer.openstack.org/api-ref/identity/v3/#list-all-role-inference-rules`

      operationId: role_inferences:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role_InferencesGetResponse'
      tags:
        - role_inferences
      summary: List all role inference rules
    head:
      description: |-
        List role inference rules.

        GET/HEAD /v3/role_inferences
      operationId: role_inferences:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - role_inferences
  /v3/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/roles_role_id'
    get:
      description: |+
        Shows details for a role.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/role`

      operationId: roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleGetResponse'
      tags:
        - roles
      summary: Show role details
    delete:
      description: |+
        Deletes a role.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/role`

      operationId: roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - roles
      summary: Delete role
    patch:
      description: |+
        Updates a role.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/role`

      operationId: roles/role_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolePatchResponse'
      tags:
        - roles
      summary: Update role
    head:
      description: |-
        Get role or list roles.

        GET/HEAD /v3/roles
        GET/HEAD /v3/roles/{role_id}
      operationId: roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/roles:
    get:
      description: |+
        Lists roles.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/roles`

      operationId: roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesGetResponse'
      tags:
        - roles
      summary: List roles
    post:
      description: |+
        Creates a role.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/roles`

      operationId: roles:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolesPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesPostResponse'
      tags:
        - roles
      summary: Create role
    head:
      description: |-
        Get role or list roles.

        GET/HEAD /v3/roles
        GET/HEAD /v3/roles/{role_id}
      operationId: roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/roles/{prior_role_id}/implies:
    parameters:
      - $ref: '#/components/parameters/roles_prior_role_id'
    get:
      description: |+
        Lists implied (inference) roles for a role.

        Relationship:
        `https://developer.openstack.org/api-ref/identity/v3/#list-implied-roles-for-role`

      operationId: roles/prior_role_id/implies:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesImpliesGetResponse'
      tags:
        - roles
      summary: List implied (inference) roles for role
    head:
      description: |-
        List Implied Roles.

        GET/HEAD /v3/roles/{prior_role_id}/implies
      operationId: roles/prior_role_id/implies:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
  /v3/roles/{prior_role_id}/implies/{implied_role_id}:
    parameters:
      - $ref: '#/components/parameters/roles_prior_role_id'
      - $ref: '#/components/parameters/roles_implies_implied_role_id'
    get:
      description: |+
        Gets a role inference rule.

        Relationship:
        `https://developer.openstack.org/api-ref/identity/v3/#get-role-inference-rule`

      operationId: roles/prior_role_id/implies/implied_role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesImplyGetResponse'
      tags:
        - roles
      summary: Get role inference rule
    delete:
      description: |+
        Deletes a role inference rule.

        Relationship:
        `https://developer.openstack.org/api-ref/identity/v3/#delete-role-inference-rule`

      operationId: roles/prior_role_id/implies/implied_role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - roles
      summary: Delete role inference rule
    put:
      description: |+
        Creates a role inference rule.

        Relationship:
        `https://developer.openstack.org/api-ref/identity/v3/#create-role-inference-rule`

      operationId: roles/prior_role_id/implies/implied_role_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolesImplyPutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesImplyPutResponse'
      tags:
        - roles
      summary: Create role inference rule
    head:
      description: |+
        Checks a role role inference rule.

        Relationship:
        `https://developer.openstack.org/api-ref/identity/v3/#confirm-role-inference-rule`

      operationId: roles/prior_role_id/implies/implied_role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - roles
      summary: Confirm role inference rule
  /v3/s3tokens:
    get:
      description: |-
        GET operation on /v3/s3tokens
      operationId: s3tokens:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3TokensGetResponse'
      tags:
        - s3tokens
    post:
      description: |-
        Authenticate s3token.

        POST /v3/s3tokens
      operationId: s3tokens:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/S3TokensPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/S3TokensPostResponse'
      tags:
        - s3tokens
    head:
      description: |-
        HEAD operation on /v3/s3tokens
      operationId: s3tokens:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - s3tokens
  /v3/services/{service_id}:
    parameters:
      - $ref: '#/components/parameters/services_service_id'
    get:
      description: |+
        Shows details for a service.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/service`

      operationId: services/service_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceGetResponse'
      tags:
        - services
      summary: Show service details
    delete:
      description: |+
        Deletes a service.

        If you try to delete a service that still has associated endpoints,
        this call either deletes all associated endpoints or fails until
        all endpoints are deleted.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/service`

      operationId: services/service_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - services
      summary: Delete service
    patch:
      description: |+
        Updates a service.

        The request body is the same as the create service request body,
        except that you include only those attributes that you want to
        update.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/services`

      operationId: services/service_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicePatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePatchResponse'
      tags:
        - services
      summary: Update service
    head:
      description: |-
        HEAD operation on /v3/services/{service_id}
      operationId: services/service_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - services
  /v3/services:
    get:
      description: |+
        Lists all services.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/services`

      operationId: services:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesGetResponse'
      tags:
        - services
      summary: List services
    post:
      description: |+
        Creates a service.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/services`

      operationId: services:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicesPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicesPostResponse'
      tags:
        - services
      summary: Create service
    head:
      description: |-
        HEAD operation on /v3/services
      operationId: services:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - services
  /v3/system/users/{user_id}/roles:
    parameters:
      - $ref: '#/components/parameters/system_users_user_id'
    get:
      description: |+
        Lists all system role assignment a user has.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system\_user\_roles`

      operationId: system/users/user_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUsersRolesGetResponse'
      tags:
        - system
      summary: List system role assignments for a user
    head:
      description: |-
        List all system grants for a specific user.

        GET/HEAD /system/users/{user_id}/roles
      operationId: system/users/user_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - system
  /v3/system/users/{user_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/system_users_user_id'
      - $ref: '#/components/parameters/system_users_roles_role_id'
    get:
      description: |+
        Get a specific system role assignment for a user. This is the same API as
        `HEAD /v3/system/users/{user\_id}/roles/{role\_id}`.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system\_user\_role`

      operationId: system/users/user_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUsersRoleGetResponse'
      tags:
        - system
      summary: Get system role assignment for a user
    delete:
      description: |+
        Remove a system role assignment from a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system\_user\_role`

      operationId: system/users/user_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - system
      summary: Delete a system role assignment from a user
    put:
      description: |+
        Grant a user a role on the system.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system\_user\_role`

      operationId: system/users/user_id/roles/role_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemUsersRolePutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemUsersRolePutResponse'
      tags:
        - system
      summary: Assign a system role to a user
    head:
      description: |+
        Check if a specific user has a role assignment on the system.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system\_user\_role`

      operationId: system/users/user_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - system
      summary: Check user for a system role assignment
  /v3/system/groups/{group_id}/roles:
    parameters:
      - $ref: '#/components/parameters/system_groups_group_id'
    get:
      description: |+
        Lists all system role assignment a group has.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system\_group\_roles`

      operationId: system/groups/group_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemGroupsRolesGetResponse'
      tags:
        - system
      summary: List system role assignments for a group
    head:
      description: |-
        List all system grants for a specific group.

        GET/HEAD /system/groups/{group_id}/roles
      operationId: system/groups/group_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - system
  /v3/system/groups/{group_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/system_groups_group_id'
      - $ref: '#/components/parameters/system_groups_roles_role_id'
    get:
      description: |+
        Get a specific system role assignment for a group. This is the same API as
        `HEAD /v3/system/groups/{group\_id}/roles/{role\_id}`.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system\_group\_role`

      operationId: system/groups/group_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemGroupsRoleGetResponse'
      tags:
        - system
      summary: Get system role assignment for a group
    delete:
      description: |+
        Remove a system role assignment from a group.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system\_group\_role`

      operationId: system/groups/group_id/roles/role_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - system
      summary: Delete a system role assignment from a group
    put:
      description: |+
        Grant a group a role on the system.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system\_group\_role`

      operationId: system/groups/group_id/roles/role_id:put
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemGroupsRolePutRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '201':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemGroupsRolePutResponse'
      tags:
        - system
      summary: Assign a system role to a group
    head:
      description: |+
        Check if a specific group has a role assignment on the system.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/system\_group\_role`

      operationId: system/groups/group_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - system
      summary: Check group for a system role assignment
  /v3/OS-TRUST/trusts/{trust_id}:
    parameters:
      - $ref: '#/components/parameters/OS_TRUST_trusts_trust_id'
    get:
      description: |-
        Dispatch for GET/HEAD or LIST trusts.
      operationId: OS-TRUST/trusts/trust_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustGetResponse'
      tags:
        - OS-TRUST
    delete:
      description: |-
        DELETE operation on /v3/OS-TRUST/trusts/{trust_id}
      operationId: OS-TRUST/trusts/trust_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - OS-TRUST
    head:
      description: |-
        Dispatch for GET/HEAD or LIST trusts.
      operationId: OS-TRUST/trusts/trust_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-TRUST
  /v3/OS-TRUST/trusts:
    get:
      description: |-
        Dispatch for GET/HEAD or LIST trusts.
      operationId: OS-TRUST/trusts:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustsGetResponse'
      tags:
        - OS-TRUST
    post:
      description: |-
        Create a new trust.

        The User creating the trust must be the trustor.
      operationId: OS-TRUST/trusts:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os_TrustTrustsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustsPostResponse'
      tags:
        - OS-TRUST
    head:
      description: |-
        Dispatch for GET/HEAD or LIST trusts.
      operationId: OS-TRUST/trusts:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-TRUST
  /v3/OS-TRUST/trusts/{trust_id}/roles:
    parameters:
      - $ref: '#/components/parameters/OS_TRUST_trusts_trust_id'
    get:
      description: |-
        GET operation on /v3/OS-TRUST/trusts/{trust_id}/roles
      operationId: OS-TRUST/trusts/trust_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustsRolesGetResponse'
      tags:
        - OS-TRUST
    head:
      description: |-
        HEAD operation on /v3/OS-TRUST/trusts/{trust_id}/roles
      operationId: OS-TRUST/trusts/trust_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-TRUST
  /v3/OS-TRUST/trusts/{trust_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/OS_TRUST_trusts_trust_id'
      - $ref: '#/components/parameters/OS_TRUST_trusts_roles_role_id'
    get:
      description: |-
        Get a role that has been assigned to a trust.
      operationId: OS-TRUST/trusts/trust_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os_TrustTrustsRoleGetResponse'
      tags:
        - OS-TRUST
    head:
      description: |-
        Get a role that has been assigned to a trust.
      operationId: OS-TRUST/trusts/trust_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - OS-TRUST
  /v3/users/{user_id}:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
    get:
      description: |+
        Shows details for a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/user`

      operationId: users/user_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetResponse'
      tags:
        - users
      summary: Show user details
    delete:
      description: |+
        Deletes a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/user`

      operationId: users/user_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
      summary: Delete user
    patch:
      description: |+
        Updates a user.

        If the back-end driver does not support this functionality, this
        call might return the HTTP `Not Implemented (501)` response code.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/user`

      operationId: users/user_id:patch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatchRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPatchResponse'
      tags:
        - users
      summary: Update user
    head:
      description: |-
        Get a user resource or list users.

        GET/HEAD /v3/users
        GET/HEAD /v3/users/{user_id}
      operationId: users/user_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users:
    get:
      description: |+
        Lists users.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/users`

      operationId: users:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetResponse'
      tags:
        - users
      summary: List users
    post:
      description: |+
        Creates a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/users`

      operationId: users:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPostResponse'
      tags:
        - users
      summary: Create user
    head:
      description: |-
        Get a user resource or list users.

        GET/HEAD /v3/users
        GET/HEAD /v3/users/{user_id}
      operationId: users:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/password:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
    get:
      description: |-
        GET operation on /v3/users/{user_id}/password
      operationId: users/user_id/password:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPasswordGetResponse'
      tags:
        - users
    post:
      description: |+
        Changes the password for a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/user\_change\_password`

      operationId: users/user_id/password:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersPasswordPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPasswordPostResponse'
      tags:
        - users
      summary: Change password for user
    head:
      description: |-
        HEAD operation on /v3/users/{user_id}/password
      operationId: users/user_id/password:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/groups:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
    get:
      description: |+
        Lists groups to which a user belongs.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/user\_groups`

      operationId: users/user_id/groups:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGroupsGetResponse'
      tags:
        - users
      summary: List groups to which a user belongs
    head:
      description: |-
        Get groups for a user.

        GET/HEAD /v3/users/{user_id}/groups
      operationId: users/user_id/groups:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/projects:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
    get:
      description: |+
        List projects to which the user has authorization to access.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/user\_projects`

      operationId: users/user_id/projects:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersProjectsGetResponse'
      tags:
        - users
      summary: List projects for user
    head:
      description: |-
        HEAD operation on /v3/users/{user_id}/projects
      operationId: users/user_id/projects:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/credentials/OS-EC2:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
    get:
      description: |-
        List EC2 Credentials for user.

        GET/HEAD /v3/users/{user_id}/credentials/OS-EC2
      operationId: users/user_id/credentials/OS-EC2:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCredentialsOs_Ec2GetResponse'
      tags:
        - users
    post:
      description: |-
        Create EC2 Credential for user.

        POST /v3/users/{user_id}/credentials/OS-EC2
      operationId: users/user_id/credentials/OS-EC2:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersCredentialsOs_Ec2PostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCredentialsOs_Ec2PostResponse'
      tags:
        - users
    head:
      description: |-
        List EC2 Credentials for user.

        GET/HEAD /v3/users/{user_id}/credentials/OS-EC2
      operationId: users/user_id/credentials/OS-EC2:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/credentials/OS-EC2/{credential_id}:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
      - $ref: '#/components/parameters/users_credentials_OS_EC2_credential_id'
    get:
      description: |-
        Get a specific EC2 credential.

        GET/HEAD /users/{user_id}/credentials/OS-EC2/{credential_id}
      operationId: users/user_id/credentials/OS-EC2/credential_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCredentialsOs_Ec2GetResponse'
      tags:
        - users
    delete:
      description: |-
        Delete a specific EC2 credential.

        DELETE /users/{user_id}/credentials/OS-EC2/{credential_id}
      operationId: users/user_id/credentials/OS-EC2/credential_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
    head:
      description: |-
        Get a specific EC2 credential.

        GET/HEAD /users/{user_id}/credentials/OS-EC2/{credential_id}
      operationId: users/user_id/credentials/OS-EC2/credential_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/OS-OAUTH1/access_tokens:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
    get:
      description: |-
        List OAuth1 Access Tokens for user.

        GET /v3/users/{user_id}/OS-OAUTH1/access_tokens
      operationId: users/user_id/OS-OAUTH1/access_tokens:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersOs_Oauth1Access_TokensGetResponse'
      tags:
        - users
    head:
      description: |-
        List OAuth1 Access Tokens for user.

        GET /v3/users/{user_id}/OS-OAUTH1/access_tokens
      operationId: users/user_id/OS-OAUTH1/access_tokens:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_access_token_id'
    get:
      description: |-
        Get specific access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersOs_Oauth1Access_TokenGetResponse'
      tags:
        - users
    delete:
      description: |-
        Delete specific access token.

        DELETE /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
    head:
      description: |-
        Get specific access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_access_token_id'
    get:
      description: |-
        List roles for a user access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/
                 {access_token_id}/roles
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersOs_Oauth1Access_TokensRolesGetResponse'
      tags:
        - users
    head:
      description: |-
        List roles for a user access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/
                 {access_token_id}/roles
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles/{role_id}:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_access_token_id'
      - $ref: '#/components/parameters/users_OS_OAUTH1_access_tokens_roles_role_id'
    get:
      description: |-
        Get role for access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/
                 {access_token_id}/roles/{role_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles/role_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersOs_Oauth1Access_TokensRoleGetResponse'
      tags:
        - users
    head:
      description: |-
        Get role for access token.

        GET/HEAD /v3/users/{user_id}/OS-OAUTH1/access_tokens/
                 {access_token_id}/roles/{role_id}
      operationId: users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles/role_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/application_credentials:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
    get:
      description: |+
        List all application credentials for a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/application\_credentials`

      operationId: users/user_id/application_credentials:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersApplication_CredentialsGetResponse'
      tags:
        - users
      summary: List application credentials
    post:
      description: |+
        Creates an application credential for a user on the project to which the
        current token is scoped.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/application\_credentials`

      operationId: users/user_id/application_credentials:post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersApplication_CredentialsPostRequest'
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersApplication_CredentialsPostResponse'
      tags:
        - users
      summary: Create application credential
    head:
      description: |-
        List application credentials for user.

        GET/HEAD /v3/users/{user_id}/application_credentials
      operationId: users/user_id/application_credentials:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/application_credentials/{application_credential_id}:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
      - $ref: '#/components/parameters/users_application_credentials_application_credential_id'
    get:
      description: |+
        Show details of an application credential.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/application\_credentials`

      operationId: users/user_id/application_credentials/application_credential_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersApplication_CredentialGetResponse'
      tags:
        - users
      summary: Show application credential details
    delete:
      description: |+
        Delete an application credential.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/application\_credentials`

      operationId: users/user_id/application_credentials/application_credential_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
      summary: Delete application credential
    head:
      description: |-
        Get application credential resource.

        GET/HEAD /v3/users/{user_id}/application_credentials/
                 {application_credential_id}
      operationId: users/user_id/application_credentials/application_credential_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/access_rules:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
    get:
      description: |+
        List all access rules for a user.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/access\_rules`

      operationId: users/user_id/access_rules:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAccess_RulesGetResponse'
      tags:
        - users
      summary: List access rules
    head:
      description: |-
        List access rules for user.

        GET/HEAD /v3/users/{user_id}/access_rules
      operationId: users/user_id/access_rules:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
  /v3/users/{user_id}/access_rules/{access_rule_id}:
    parameters:
      - $ref: '#/components/parameters/users_user_id'
      - $ref: '#/components/parameters/users_access_rules_access_rule_id'
    get:
      description: |+
        Show details of an access rule.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/access\_rules`

      operationId: users/user_id/access_rules/access_rule_id:get
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAccess_RuleGetResponse'
      tags:
        - users
      summary: Show access rule details
    delete:
      description: |+
        Delete an access rule. An access rule that is still in use by an application
        credential cannot be deleted.

        Relationship: `https://docs.openstack.org/api/openstack-identity/3/rel/access\_rules`

      operationId: users/user_id/access_rules/access_rule_id:delete
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '204':
          description: Ok
      tags:
        - users
      summary: Delete access rule
    head:
      description: |-
        Get access rule resource.

        GET/HEAD /v3/users/{user_id}/access_rules/{access_rule_id}
      operationId: users/user_id/access_rules/access_rule_id:head
      responses:
        '403':
          description: Error
        '404':
          description: Error
        '200':
          description: Ok
      tags:
        - users
components:
  schemas:
    RootGetResponse:
      type: object
      description: Response of the versions:get operation
    AuthProjectsGetResponse:
      type: object
      description: Response of the auth/projects:get operation
    Os_FederationProjectsGetResponse:
      type: object
      description: Response of the OS-FEDERATION/projects:get operation
    AuthDomainsGetResponse:
      type: object
      description: Response of the auth/domains:get operation
    Os_FederationDomainsGetResponse:
      type: object
      description: Response of the OS-FEDERATION/domains:get operation
    AuthSystemGetResponse:
      type: object
      description: Response of the auth/system:get operation
    AuthCatalogGetResponse:
      type: object
      description: Response of the auth/catalog:get operation
    AuthTokensOs_PkiRevokedGetResponse:
      type: object
      description: Response of the auth/tokens/OS-PKI/revoked:get operation
    AuthTokensGetResponse:
      type: object
      description: Response of the auth/tokens:get operation
    AuthTokensPostRequest:
      type: object
      properties:
        identity:
          type: object
          properties:
            methods:
              type: array
              items:
                type: string
            password:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
                    password:
                      type: string
                    domain:
                      type: object
                      properties:
                        id:
                          type: string
                        name:
                          type: string
            token:
              type: object
              properties:
                id:
                  type: string
              required:
                - id
          required:
            - methods
        scope:
          type:
            - object
            - string
          properties:
            project:
              type: object
              properties:
                name:
                  type: string
                id:
                  type: string
                domain:
                  type: object
                  properties:
                    id:
                      type: string
                    name:
                      type: string
            domain:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
            OS-TRUST:trust:
              type: object
              properties:
                id:
                  type: string
            system:
              type: object
              properties:
                all:
                  type: boolean
                  enum:
                    - true
                    - false
                    - 
      required:
        - identity
    AuthTokensPostResponse:
      type: object
      description: Response of the auth/tokens:post operation
    AuthOs_FederationSaml2GetResponse:
      type: object
      description: Response of the auth/OS-FEDERATION/saml2:get operation
    AuthOs_FederationSaml2PostRequest:
      type: object
      description: Request of the auth/OS-FEDERATION/saml2:post operation
    AuthOs_FederationSaml2PostResponse:
      type: object
      description: Response of the auth/OS-FEDERATION/saml2:post operation
    AuthOs_FederationSaml2EcpGetResponse:
      type: object
      description: Response of the auth/OS-FEDERATION/saml2/ecp:get operation
    AuthOs_FederationSaml2EcpPostRequest:
      type: object
      description: Request of the auth/OS-FEDERATION/saml2/ecp:post operation
    AuthOs_FederationSaml2EcpPostResponse:
      type: object
      description: Response of the auth/OS-FEDERATION/saml2/ecp:post operation
    AuthOs_FederationWebssoGetResponse:
      type: object
      description: Response of the auth/OS-FEDERATION/websso/protocol_id:get operation
    AuthOs_FederationWebssoPostRequest:
      type: object
      description: Request of the auth/OS-FEDERATION/websso/protocol_id:post operation
    AuthOs_FederationWebssoPostResponse:
      type: object
      description: Response of the auth/OS-FEDERATION/websso/protocol_id:post operation
    AuthOs_FederationIdentity_ProvidersProtocolsWebssoGetResponse:
      type: object
      description: Response of the auth/OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/websso:get
        operation
    AuthOs_FederationIdentity_ProvidersProtocolsWebssoPostRequest:
      type: object
      description: Request of the auth/OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/websso:post
        operation
    AuthOs_FederationIdentity_ProvidersProtocolsWebssoPostResponse:
      type: object
      description: Response of the auth/OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/websso:post
        operation
    CredentialPatchRequest:
      type: object
      description: Request of the credentials/credential_id:patch operation
    CredentialPatchResponse:
      type: object
      description: Response of the credentials/credential_id:patch operation
    CredentialGetResponse:
      type: object
      description: Response of the credentials/credential_id:get operation
    CredentialsGetResponse:
      type: object
      description: Response of the credentials:get operation
    CredentialsPostRequest:
      type: object
      description: Request of the credentials:post operation
    CredentialsPostResponse:
      type: object
      description: Response of the credentials:post operation
    DomainPatchRequest:
      type: object
      properties:
        description:
          type:
            - string
            - 'null'
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[\S]+'
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          required: []
          maxItems: 80
          uniqueItems: true
      additionalProperties: true
      minProperties: 1
    DomainPatchResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type:
            - string
            - 'null'
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[\S]+'
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          required: []
          maxItems: 80
          uniqueItems: true
      additionalProperties: true
    DomainGetResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type:
            - string
            - 'null'
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[\S]+'
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          required: []
          maxItems: 80
          uniqueItems: true
      additionalProperties: true
    DomainsGetResponse:
      type: object
      properties:
        domains:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              description:
                type:
                  - string
                  - 'null'
              enabled:
                type: boolean
                enum:
                  - true
                  - false
                  - 
              name:
                type: string
                minLength: 1
                maxLength: 64
                pattern: '[\S]+'
              tags:
                type: array
                items:
                  type: string
                  minLength: 1
                  maxLength: 255
                  pattern: ^[^,/]*$
                required: []
                maxItems: 80
                uniqueItems: true
            additionalProperties: true
    DomainsPostRequest:
      type: object
      properties:
        description:
          type:
            - string
            - 'null'
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[\S]+'
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          required: []
          maxItems: 80
          uniqueItems: true
      additionalProperties: true
      required:
        - name
    DomainsPostResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type:
            - string
            - 'null'
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[\S]+'
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          required: []
          maxItems: 80
          uniqueItems: true
      additionalProperties: true
    DomainsConfigPatchRequest:
      type: object
      description: Request of the domains/domain_id/config:patch operation
    DomainsConfigPatchResponse:
      type: object
      properties:
        config:
          type: object
          description: A config object.
          properties:
            identity:
              type: object
              description: An identity object.
              properties:
                driver:
                  type: string
                  description: The Identity backend driver.
                additionalProperties: true
            ldap:
              type: object
              description: An ldap object. Required to set the LDAP group configuration
                options.
              properties:
                url:
                  type: string
                  format: url
                  description: The LDAP URL.
                user_tree_dn:
                  type: string
                  description: The base distinguished name (DN) of LDAP, from where
                    all users can be reached. For example, ou=Users,dc=root,dc=org.
              additionalProperties: true
    DomainsConfigGetResponse:
      type: object
      description: Response of the domains/domain_id/config:get operation
    DomainsConfigPutRequest:
      type: object
      properties:
        config:
          type: object
          description: A config object.
          properties:
            identity:
              type: object
              description: An identity object.
              properties:
                driver:
                  type: string
                  description: The Identity backend driver.
                additionalProperties: true
            ldap:
              type: object
              description: An ldap object. Required to set the LDAP group configuration
                options.
              properties:
                url:
                  type: string
                  format: url
                  description: The LDAP URL.
                user_tree_dn:
                  type: string
                  description: The base distinguished name (DN) of LDAP, from where
                    all users can be reached. For example, ou=Users,dc=root,dc=org.
              additionalProperties: true
    DomainsConfigPutResponse:
      type: object
      properties:
        config:
          type: object
          description: A config object.
          properties:
            identity:
              type: object
              description: An identity object.
              properties:
                driver:
                  type: string
                  description: The Identity backend driver.
                additionalProperties: true
            ldap:
              type: object
              description: An ldap object. Required to set the LDAP group configuration
                options.
              properties:
                url:
                  type: string
                  format: url
                  description: The LDAP URL.
                user_tree_dn:
                  type: string
                  description: The base distinguished name (DN) of LDAP, from where
                    all users can be reached. For example, ou=Users,dc=root,dc=org.
              additionalProperties: true
    DomainsConfigGroupPatchRequest:
      oneOf:
        - type: object
          description: An identity object.
          properties:
            driver:
              type: string
              description: The Identity backend driver.
            additionalProperties: true
        - type: object
          description: An ldap object. Required to set the LDAP group configuration
            options.
          properties:
            url:
              type: string
              format: url
              description: The LDAP URL.
            user_tree_dn:
              type: string
              description: The base distinguished name (DN) of LDAP, from where all
                users can be reached. For example, ou=Users,dc=root,dc=org.
          additionalProperties: true
    DomainsConfigGroupPatchResponse:
      oneOf:
        - type: object
          description: An identity object.
          properties:
            driver:
              type: string
              description: The Identity backend driver.
            additionalProperties: true
        - type: object
          description: An ldap object. Required to set the LDAP group configuration
            options.
          properties:
            url:
              type: string
              format: url
              description: The LDAP URL.
            user_tree_dn:
              type: string
              description: The base distinguished name (DN) of LDAP, from where all
                users can be reached. For example, ou=Users,dc=root,dc=org.
          additionalProperties: true
    DomainsConfigGroupGetResponse:
      oneOf:
        - type: object
          description: An identity object.
          properties:
            driver:
              type: string
              description: The Identity backend driver.
            additionalProperties: true
        - type: object
          description: An ldap object. Required to set the LDAP group configuration
            options.
          properties:
            url:
              type: string
              format: url
              description: The LDAP URL.
            user_tree_dn:
              type: string
              description: The base distinguished name (DN) of LDAP, from where all
                users can be reached. For example, ou=Users,dc=root,dc=org.
          additionalProperties: true
    DomainsConfigGroupOptionPatchRequest:
      type: object
      description: Request of the domains/domain_id/config/group/option:patch operation
    DomainsConfigGroupOptionPatchResponse:
      type: object
      description: Response of the domains/domain_id/config/group/option:patch operation
    DomainsConfigGroupOptionGetResponse:
      type: object
      description: Response of the domains/domain_id/config/group/option:get operation
    DomainsConfigDefaultGetResponse:
      type: object
      properties:
        config:
          type: object
          description: A config object.
          properties:
            identity:
              type: object
              description: An identity object.
              properties:
                driver:
                  type: string
                  description: The Identity backend driver.
                additionalProperties: true
            ldap:
              type: object
              description: An ldap object. Required to set the LDAP group configuration
                options.
              properties:
                url:
                  type: string
                  format: url
                  description: The LDAP URL.
                user_tree_dn:
                  type: string
                  description: The base distinguished name (DN) of LDAP, from where
                    all users can be reached. For example, ou=Users,dc=root,dc=org.
              additionalProperties: true
    DomainsConfigDefaultGroupGetResponse:
      oneOf:
        - type: object
          description: An identity object.
          properties:
            driver:
              type: string
              description: The Identity backend driver.
            additionalProperties: true
        - type: object
          description: An ldap object. Required to set the LDAP group configuration
            options.
          properties:
            url:
              type: string
              format: url
              description: The LDAP URL.
            user_tree_dn:
              type: string
              description: The base distinguished name (DN) of LDAP, from where all
                users can be reached. For example, ou=Users,dc=root,dc=org.
          additionalProperties: true
    DomainsUsersRolesGetResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              links:
                type: object
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
              description:
                type: string
              options:
                type: object
                properties:
                  immutable:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
        links:
          type: object
    DomainsUsersRoleGetResponse:
      type: object
      description: Response of the domains/domain_id/users/user_id/roles/role_id:get
        operation
    DomainsUsersRolePutRequest:
      type: object
      description: Request of the domains/domain_id/users/user_id/roles/role_id:put
        operation
    DomainsUsersRolePutResponse:
      type: object
      description: Response of the domains/domain_id/users/user_id/roles/role_id:put
        operation
    DomainsGroupsRolesGetResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              links:
                type: object
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
              description:
                type: string
              options:
                type: object
                properties:
                  immutable:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
        links:
          type: object
    DomainsGroupsRoleGetResponse:
      type: object
      description: Response of the domains/domain_id/groups/group_id/roles/role_id:get
        operation
    DomainsGroupsRolePutRequest:
      type: object
      description: Request of the domains/domain_id/groups/group_id/roles/role_id:put
        operation
    DomainsGroupsRolePutResponse:
      type: object
      description: Response of the domains/domain_id/groups/group_id/roles/role_id:put
        operation
    Ec2TokensGetResponse:
      type: object
      description: Response of the ec2tokens:get operation
    Ec2TokensPostRequest:
      type: object
      description: Request of the ec2tokens:post operation
    Ec2TokensPostResponse:
      type: object
      description: Response of the ec2tokens:post operation
    EndpointPatchRequest:
      type: object
      description: Request of the endpoints/endpoint_id:patch operation
    EndpointPatchResponse:
      type: object
      description: Response of the endpoints/endpoint_id:patch operation
    EndpointGetResponse:
      type: object
      description: Response of the endpoints/endpoint_id:get operation
    EndpointsGetResponse:
      type: object
      description: Response of the endpoints:get operation
    EndpointsPostRequest:
      type: object
      description: Request of the endpoints:post operation
    EndpointsPostResponse:
      type: object
      description: Response of the endpoints:post operation
    EndpointsOs_Endpoint_PolicyPolicyGetResponse:
      type: object
      description: Response of the endpoints/endpoint_id/OS-ENDPOINT-POLICY/policy:get
        operation
    GroupPatchRequest:
      type: object
      properties:
        default_project_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        description:
          type:
            - string
            - 'null'
        domain_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        federated:
          type: array
          items:
            type: object
            properties:
              idp_id:
                type: string
              protocols:
                type: array
                items:
                  type: object
                  properties:
                    protocol_id:
                      type: string
                    unique_id:
                      type: string
                  required:
                    - protocol_id
                    - unique_id
                minItems: 1
            required:
              - idp_id
              - protocols
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[\S]+'
        password:
          type:
            - string
            - 'null'
        options:
          type: object
          properties:
            ignore_change_password_upon_first_use:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_password_expiry:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_lockout_failure_attempts:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            lock_password:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_user_inactivity:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            multi_factor_auth_rules:
              type:
                - array
                - 'null'
              items:
                type: array
                items:
                  type: string
                minItems: 1
                uniqueItems: true
              uniqueItems: true
            multi_factor_auth_enabled:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
      additionalProperties: true
      minProperties: 1
      options:
        type: object
    GroupPatchResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type:
            - string
            - 'null'
        domain_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[\S]+'
    GroupGetResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type:
            - string
            - 'null'
        domain_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[\S]+'
    GroupsGetResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              description:
                type:
                  - string
                  - 'null'
              domain_id:
                type: string
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
    GroupsPostRequest:
      type: object
      properties:
        default_project_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        description:
          type:
            - string
            - 'null'
        domain_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        federated:
          type: array
          items:
            type: object
            properties:
              idp_id:
                type: string
              protocols:
                type: array
                items:
                  type: object
                  properties:
                    protocol_id:
                      type: string
                    unique_id:
                      type: string
                  required:
                    - protocol_id
                    - unique_id
                minItems: 1
            required:
              - idp_id
              - protocols
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[\S]+'
        password:
          type:
            - string
            - 'null'
        options:
          type: object
          properties:
            ignore_change_password_upon_first_use:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_password_expiry:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_lockout_failure_attempts:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            lock_password:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_user_inactivity:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            multi_factor_auth_rules:
              type:
                - array
                - 'null'
              items:
                type: array
                items:
                  type: string
                minItems: 1
                uniqueItems: true
              uniqueItems: true
            multi_factor_auth_enabled:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
      additionalProperties: true
      required:
        - name
      options:
        type: object
    GroupsPostResponse:
      type: object
      description: Response of the groups:post operation
    GroupsUsersGetResponse:
      type: object
      description: Response of the groups/group_id/users:get operation
    GroupsUserGetResponse:
      type: object
      description: Response of the groups/group_id/users/user_id:get operation
    GroupsUserPutRequest:
      type: object
      description: Request of the groups/group_id/users/user_id:put operation
    GroupsUserPutResponse:
      type: object
      description: Response of the groups/group_id/users/user_id:put operation
    LimitPatchRequest:
      type: object
      description: Request of the limits/limit_id:patch operation
    LimitPatchResponse:
      type: object
      description: Response of the limits/limit_id:patch operation
    LimitGetResponse:
      type: object
      description: Response of the limits/limit_id:get operation
    LimitsGetResponse:
      type: object
      description: Response of the limits:get operation
    LimitsPostRequest:
      type: object
      description: Request of the limits:post operation
    LimitsPostResponse:
      type: object
      description: Response of the limits:post operation
    LimitsModelGetResponse:
      type: object
      description: Response of the limits/model:get operation
    Os_Ep_FilterEndpoint_GroupPatchRequest:
      type: object
      description: Request of the OS-EP-FILTER/endpoint_groups/endpoint_group_id:patch
        operation
    Os_Ep_FilterEndpoint_GroupPatchResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id:patch
        operation
    Os_Ep_FilterEndpoint_GroupGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id:get
        operation
    Os_Ep_FilterEndpoint_GroupsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups:get operation
    Os_Ep_FilterEndpoint_GroupsPostRequest:
      type: object
      description: Request of the OS-EP-FILTER/endpoint_groups:post operation
    Os_Ep_FilterEndpoint_GroupsPostResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups:post operation
    Os_Ep_FilterEndpointsProjectsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoints/endpoint_id/projects:get
        operation
    Os_Ep_FilterProjectsEndpointGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:get
        operation
    Os_Ep_FilterProjectsEndpointPutRequest:
      type: object
      description: Request of the OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:put
        operation
    Os_Ep_FilterProjectsEndpointPutResponse:
      type: object
      description: Response of the OS-EP-FILTER/projects/project_id/endpoints/endpoint_id:put
        operation
    Os_Ep_FilterProjectsEndpointsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/projects/project_id/endpoints:get
        operation
    Os_Ep_FilterProjectsEndpoint_GroupsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/projects/project_id/endpoint_groups:get
        operation
    Os_Ep_FilterEndpoint_GroupsEndpointsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/endpoints:get
        operation
    Os_Ep_FilterEndpoint_GroupsProjectsGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects:get
        operation
    Os_Ep_FilterEndpoint_GroupsProjectGetResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:get
        operation
    Os_Ep_FilterEndpoint_GroupsProjectPutRequest:
      type: object
      description: Request of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:put
        operation
    Os_Ep_FilterEndpoint_GroupsProjectPutResponse:
      type: object
      description: Response of the OS-EP-FILTER/endpoint_groups/endpoint_group_id/projects/project_id:put
        operation
    Os_FederationSaml2MetadataGetResponse:
      type: object
      description: Response of the OS-FEDERATION/saml2/metadata:get operation
    Os_FederationIdentity_ProvidersProtocolsAuthGetResponse:
      type: object
      description: Response of the OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/auth:get
        operation
    Os_FederationIdentity_ProvidersProtocolsAuthPostRequest:
      type: object
      description: Request of the OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/auth:post
        operation
    Os_FederationIdentity_ProvidersProtocolsAuthPostResponse:
      type: object
      description: Response of the OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id/auth:post
        operation
    Os_FederationIdentity_ProviderPatchRequest:
      type: object
      description: Request of the OS-FEDERATION/identity_providers/idp_id:patch operation
    Os_FederationIdentity_ProviderPatchResponse:
      type: object
      description: Response of the OS-FEDERATION/identity_providers/idp_id:patch operation
    Os_FederationIdentity_ProviderGetResponse:
      type: object
      description: Response of the OS-FEDERATION/identity_providers/idp_id:get operation
    Os_FederationIdentity_ProviderPutRequest:
      type: object
      description: Request of the OS-FEDERATION/identity_providers/idp_id:put operation
    Os_FederationIdentity_ProviderPutResponse:
      type: object
      description: Response of the OS-FEDERATION/identity_providers/idp_id:put operation
    Os_FederationIdentity_ProvidersGetResponse:
      type: object
      description: Response of the OS-FEDERATION/identity_providers:get operation
    Os_FederationIdentity_ProvidersProtocolPatchRequest:
      type: object
      description: Request of the OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:patch
        operation
    Os_FederationIdentity_ProvidersProtocolPatchResponse:
      type: object
      description: Response of the OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:patch
        operation
    Os_FederationIdentity_ProvidersProtocolGetResponse:
      type: object
      description: Response of the OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:get
        operation
    Os_FederationIdentity_ProvidersProtocolPutRequest:
      type: object
      description: Request of the OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:put
        operation
    Os_FederationIdentity_ProvidersProtocolPutResponse:
      type: object
      description: Response of the OS-FEDERATION/identity_providers/idp_id/protocols/protocol_id:put
        operation
    Os_FederationIdentity_ProvidersProtocolsGetResponse:
      type: object
      description: Response of the OS-FEDERATION/identity_providers/idp_id/protocols:get
        operation
    Os_FederationMappingPatchRequest:
      type: object
      description: Request of the OS-FEDERATION/mappings/mapping_id:patch operation
    Os_FederationMappingPatchResponse:
      type: object
      description: Response of the OS-FEDERATION/mappings/mapping_id:patch operation
    Os_FederationMappingGetResponse:
      type: object
      description: Response of the OS-FEDERATION/mappings/mapping_id:get operation
    Os_FederationMappingPutRequest:
      type: object
      description: Request of the OS-FEDERATION/mappings/mapping_id:put operation
    Os_FederationMappingPutResponse:
      type: object
      description: Response of the OS-FEDERATION/mappings/mapping_id:put operation
    Os_FederationMappingsGetResponse:
      type: object
      description: Response of the OS-FEDERATION/mappings:get operation
    Os_FederationService_ProviderPatchRequest:
      type: object
      description: Request of the OS-FEDERATION/service_providers/sp_id:patch operation
    Os_FederationService_ProviderPatchResponse:
      type: object
      description: Response of the OS-FEDERATION/service_providers/sp_id:patch operation
    Os_FederationService_ProviderGetResponse:
      type: object
      description: Response of the OS-FEDERATION/service_providers/sp_id:get operation
    Os_FederationService_ProviderPutRequest:
      type: object
      description: Request of the OS-FEDERATION/service_providers/sp_id:put operation
    Os_FederationService_ProviderPutResponse:
      type: object
      description: Response of the OS-FEDERATION/service_providers/sp_id:put operation
    Os_FederationService_ProvidersGetResponse:
      type: object
      description: Response of the OS-FEDERATION/service_providers:get operation
    Os_InheritDomainsGroupsRolesInherited_To_ProjectsGetResponse:
      type: object
      description: Response of the 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:get
        operation
    Os_InheritDomainsGroupsRolesInherited_To_ProjectsPutRequest:
      type: object
      description: Request of the 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:put
        operation
    Os_InheritDomainsGroupsRolesInherited_To_ProjectsPutResponse:
      type: object
      description: Response of the 
        OS-INHERIT/domains/domain_id/groups/group_id/roles/role_id/inherited_to_projects:put
        operation
    Os_InheritDomainsUsersRolesInherited_To_ProjectsGetResponse:
      type: object
      description: Response of the 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:get
        operation
    Os_InheritDomainsUsersRolesInherited_To_ProjectsPutRequest:
      type: object
      description: Request of the 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:put
        operation
    Os_InheritDomainsUsersRolesInherited_To_ProjectsPutResponse:
      type: object
      description: Response of the 
        OS-INHERIT/domains/domain_id/users/user_id/roles/role_id/inherited_to_projects:put
        operation
    Os_InheritProjectsUsersRolesInherited_To_ProjectsGetResponse:
      type: object
      description: Response of the 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:get
        operation
    Os_InheritProjectsUsersRolesInherited_To_ProjectsPutRequest:
      type: object
      description: Request of the 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:put
        operation
    Os_InheritProjectsUsersRolesInherited_To_ProjectsPutResponse:
      type: object
      description: Response of the 
        OS-INHERIT/projects/project_id/users/user_id/roles/role_id/inherited_to_projects:put
        operation
    Os_InheritProjectsGroupsRolesInherited_To_ProjectsGetResponse:
      type: object
      description: Response of the 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:get
        operation
    Os_InheritProjectsGroupsRolesInherited_To_ProjectsPutRequest:
      type: object
      description: Request of the 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:put
        operation
    Os_InheritProjectsGroupsRolesInherited_To_ProjectsPutResponse:
      type: object
      description: Response of the 
        OS-INHERIT/projects/project_id/groups/group_id/roles/role_id/inherited_to_projects:put
        operation
    Os_Oauth1ConsumerPatchRequest:
      type: object
      description: Request of the OS-OAUTH1/consumers/consumer_id:patch operation
    Os_Oauth1ConsumerPatchResponse:
      type: object
      description: Response of the OS-OAUTH1/consumers/consumer_id:patch operation
    Os_Oauth1ConsumerGetResponse:
      type: object
      description: Response of the OS-OAUTH1/consumers/consumer_id:get operation
    Os_Oauth1ConsumersGetResponse:
      type: object
      description: Response of the OS-OAUTH1/consumers:get operation
    Os_Oauth1ConsumersPostRequest:
      type: object
      description: Request of the OS-OAUTH1/consumers:post operation
    Os_Oauth1ConsumersPostResponse:
      type: object
      description: Response of the OS-OAUTH1/consumers:post operation
    Os_Oauth1Request_TokenGetResponse:
      type: object
      description: Response of the OS-OAUTH1/request_token:get operation
    Os_Oauth1Request_TokenPostRequest:
      type: object
      description: Request of the OS-OAUTH1/request_token:post operation
    Os_Oauth1Request_TokenPostResponse:
      type: object
      description: Response of the OS-OAUTH1/request_token:post operation
    Os_Oauth1Access_TokenGetResponse:
      type: object
      description: Response of the OS-OAUTH1/access_token:get operation
    Os_Oauth1Access_TokenPostRequest:
      type: object
      description: Request of the OS-OAUTH1/access_token:post operation
    Os_Oauth1Access_TokenPostResponse:
      type: object
      description: Response of the OS-OAUTH1/access_token:post operation
    Os_Oauth1AuthorizePutRequest:
      type: object
      description: Request of the OS-OAUTH1/authorize/request_token_id:put operation
    Os_Oauth1AuthorizePutResponse:
      type: object
      description: Response of the OS-OAUTH1/authorize/request_token_id:put operation
    Os_Oauth2TokenPatchRequest:
      type: object
      description: Request of the OS-OAUTH2/token:patch operation
    Os_Oauth2TokenPatchResponse:
      type: object
      description: Response of the OS-OAUTH2/token:patch operation
    Os_Oauth2TokenGetResponse:
      type: object
      description: Response of the OS-OAUTH2/token:get operation
    Os_Oauth2TokenPostRequest:
      type: object
      description: Request of the OS-OAUTH2/token:post operation
    Os_Oauth2TokenPostResponse:
      type: object
      description: Response of the OS-OAUTH2/token:post operation
    Os_Oauth2TokenPutRequest:
      type: object
      description: Request of the OS-OAUTH2/token:put operation
    Os_Oauth2TokenPutResponse:
      type: object
      description: Response of the OS-OAUTH2/token:put operation
    Os_RevokeEventsGetResponse:
      type: object
      description: Response of the OS-REVOKE/events:get operation
    Os_Simple_CertCaGetResponse:
      type: object
      description: Response of the OS-SIMPLE-CERT/ca:get operation
    Os_Simple_CertCertificatesGetResponse:
      type: object
      description: Response of the OS-SIMPLE-CERT/certificates:get operation
    PolicyPatchRequest:
      type: object
      description: Request of the policies/policy_id:patch operation
    PolicyPatchResponse:
      type: object
      description: Response of the policies/policy_id:patch operation
    PolicyGetResponse:
      type: object
      description: Response of the policies/policy_id:get operation
    PoliciesGetResponse:
      type: object
      description: Response of the policies:get operation
    PoliciesPostRequest:
      type: object
      description: Request of the policies:post operation
    PoliciesPostResponse:
      type: object
      description: Response of the policies:post operation
    PoliciesOs_Endpoint_PolicyEndpointsGetResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/endpoints:get
        operation
    PoliciesOs_Endpoint_PolicyEndpointGetResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:get
        operation
    PoliciesOs_Endpoint_PolicyEndpointPutRequest:
      type: object
      description: Request of the policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:put
        operation
    PoliciesOs_Endpoint_PolicyEndpointPutResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/endpoints/endpoint_id:put
        operation
    PoliciesOs_Endpoint_PolicyServiceGetResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:get
        operation
    PoliciesOs_Endpoint_PolicyServicePutRequest:
      type: object
      description: Request of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:put
        operation
    PoliciesOs_Endpoint_PolicyServicePutResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id:put
        operation
    PoliciesOs_Endpoint_PolicyServicesRegionGetResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:get
        operation
    PoliciesOs_Endpoint_PolicyServicesRegionPutRequest:
      type: object
      description: Request of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:put
        operation
    PoliciesOs_Endpoint_PolicyServicesRegionPutResponse:
      type: object
      description: Response of the policies/policy_id/OS-ENDPOINT-POLICY/services/service_id/regions/region_id:put
        operation
    ProjectPatchRequest:
      type: object
      properties:
        description:
          type:
            - string
            - 'null'
        domain_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        is_domain:
          type: boolean
          enum:
            - true
            - false
            - 
        parent_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[\S]+'
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          required: []
          maxItems: 80
          uniqueItems: true
        options:
          type: object
          properties:
            immutable:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
      additionalProperties: true
      minProperties: 1
    ProjectPatchResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type:
            - string
            - 'null'
        domain_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        is_domain:
          type: boolean
          enum:
            - true
            - false
            - 
        parent_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[\S]+'
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          required: []
          maxItems: 80
          uniqueItems: true
        options:
          type: object
          properties:
            immutable:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
      additionalProperties: true
    ProjectGetResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type:
            - string
            - 'null'
        domain_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        is_domain:
          type: boolean
          enum:
            - true
            - false
            - 
        parent_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[\S]+'
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          required: []
          maxItems: 80
          uniqueItems: true
        options:
          type: object
          properties:
            immutable:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
      additionalProperties: true
    ProjectsGetResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              description:
                type:
                  - string
                  - 'null'
              domain_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
              enabled:
                type: boolean
                enum:
                  - true
                  - false
                  - 
              is_domain:
                type: boolean
                enum:
                  - true
                  - false
                  - 
              parent_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
              name:
                type: string
                minLength: 1
                maxLength: 64
                pattern: '[\S]+'
              tags:
                type: array
                items:
                  type: string
                  minLength: 1
                  maxLength: 255
                  pattern: ^[^,/]*$
                required: []
                maxItems: 80
                uniqueItems: true
              options:
                type: object
                properties:
                  immutable:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
            additionalProperties: true
    ProjectsPostRequest:
      type: object
      properties:
        description:
          type:
            - string
            - 'null'
        domain_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        is_domain:
          type: boolean
          enum:
            - true
            - false
            - 
        parent_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[\S]+'
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          required: []
          maxItems: 80
          uniqueItems: true
        options:
          type: object
          properties:
            immutable:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
      additionalProperties: true
      required:
        - name
    ProjectsPostResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type:
            - string
            - 'null'
        domain_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        is_domain:
          type: boolean
          enum:
            - true
            - false
            - 
        parent_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        name:
          type: string
          minLength: 1
          maxLength: 64
          pattern: '[\S]+'
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          required: []
          maxItems: 80
          uniqueItems: true
        options:
          type: object
          properties:
            immutable:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
      additionalProperties: true
    ProjectsTagsGetResponse:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          required: []
          maxItems: 80
          uniqueItems: true
    ProjectsTagsPutRequest:
      type: array
      items:
        type: string
        minLength: 1
        maxLength: 255
        pattern: ^[^,/]*$
      required: []
      maxItems: 80
      uniqueItems: true
    ProjectsTagsPutResponse:
      type: object
      properties:
        tags:
          type: array
          items:
            type: string
            minLength: 1
            maxLength: 255
            pattern: ^[^,/]*$
          required: []
          maxItems: 80
          uniqueItems: true
    ProjectsTagPutRequest:
      type: string
      pattern: ^[^,/]*$
      maxLength: 255
      minLength: 1
    ProjectsTagPutResponse:
      type: object
      description: Response of the projects/project_id/tags/value:put operation
    ProjectsUsersRolePutRequest:
      type: object
      description: Request of the projects/project_id/users/user_id/roles/role_id:put
        operation
    ProjectsUsersRolesGetResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              links:
                type: object
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
              description:
                type: string
              options:
                type: object
                properties:
                  immutable:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
        links:
          type: object
    ProjectsGroupsRoleGetResponse:
      type: object
      description: Response of the projects/project_id/groups/group_id/roles/role_id:get
        operation
    ProjectsGroupsRolePutRequest:
      type: object
      description: Request of the projects/project_id/groups/group_id/roles/role_id:put
        operation
    ProjectsGroupsRolePutResponse:
      type: object
      description: Response of the projects/project_id/groups/group_id/roles/role_id:put
        operation
    ProjectsGroupsRolesGetResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              links:
                type: object
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
              description:
                type: string
              options:
                type: object
                properties:
                  immutable:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
        links:
          type: object
    RegionPatchRequest:
      type: object
      description: Request of the regions/region_id:patch operation
    RegionPatchResponse:
      type: object
      description: Response of the regions/region_id:patch operation
    RegionGetResponse:
      type: object
      description: Response of the regions/region_id:get operation
    RegionPutRequest:
      type: object
      description: Request of the regions/region_id:put operation
    RegionPutResponse:
      type: object
      description: Response of the regions/region_id:put operation
    RegionsGetResponse:
      type: object
      description: Response of the regions:get operation
    RegionsPostRequest:
      type: object
      description: Request of the regions:post operation
    RegionsPostResponse:
      type: object
      description: Response of the regions:post operation
    Registered_LimitPatchRequest:
      type: object
      description: Request of the registered_limits/registered_limit_id:patch operation
    Registered_LimitPatchResponse:
      type: object
      description: Response of the registered_limits/registered_limit_id:patch operation
    Registered_LimitGetResponse:
      type: object
      description: Response of the registered_limits/registered_limit_id:get operation
    Registered_LimitsGetResponse:
      type: object
      description: Response of the registered_limits:get operation
    Registered_LimitsPostRequest:
      type: object
      description: Request of the registered_limits:post operation
    Registered_LimitsPostResponse:
      type: object
      description: Response of the registered_limits:post operation
    Role_AssignmentsGetResponse:
      type: object
      description: Response of the role_assignments:get operation
    Role_InferencesGetResponse:
      type: object
      description: Response of the role_inferences:get operation
    RolePatchRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[\S]+'
        description:
          type: string
        options:
          type: object
          properties:
            immutable:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
      additionalProperties: true
      minProperties: 1
    RolePatchResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        links:
          type: object
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[\S]+'
        description:
          type: string
        options:
          type: object
          properties:
            immutable:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
    RoleGetResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        links:
          type: object
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[\S]+'
        description:
          type: string
        options:
          type: object
          properties:
            immutable:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
    RolesGetResponse:
      type: object
      properties:
        roles:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              links:
                type: object
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
              description:
                type: string
              options:
                type: object
                properties:
                  immutable:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
        links:
          type: object
    RolesPostRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[\S]+'
        description:
          type: string
        options:
          type: object
          properties:
            immutable:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
      additionalProperties: true
      required:
        - name
    RolesPostResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        links:
          type: object
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[\S]+'
        description:
          type: string
        options:
          type: object
          properties:
            immutable:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
    RolesImpliesGetResponse:
      type: object
      properties:
        role_inference:
          properties:
            prior_role:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                links:
                  type: object
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  pattern: '[\S]+'
                description:
                  type: string
                options:
                  type: object
                  properties:
                    immutable:
                      type:
                        - boolean
                        - 'null'
                      enum:
                        - true
                        - false
                        - 
                  additionalProperties: false
            implies:
              type: array
              item:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  links:
                    type: object
                  name:
                    type: string
                    minLength: 1
                    maxLength: 255
                    pattern: '[\S]+'
                  description:
                    type: string
                  options:
                    type: object
                    properties:
                      immutable:
                        type:
                          - boolean
                          - 'null'
                        enum:
                          - true
                          - false
                          - 
                    additionalProperties: false
    RolesImplyGetResponse:
      type: object
      properties:
        role_inference:
          properties:
            prior_role:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                links:
                  type: object
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  pattern: '[\S]+'
                description:
                  type: string
                options:
                  type: object
                  properties:
                    immutable:
                      type:
                        - boolean
                        - 'null'
                      enum:
                        - true
                        - false
                        - 
                  additionalProperties: false
            implies:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                links:
                  type: object
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  pattern: '[\S]+'
                description:
                  type: string
                options:
                  type: object
                  properties:
                    immutable:
                      type:
                        - boolean
                        - 'null'
                      enum:
                        - true
                        - false
                        - 
                  additionalProperties: false
    RolesImplyPutRequest:
      type: object
      description: Request of the roles/prior_role_id/implies/implied_role_id:put
        operation
    RolesImplyPutResponse:
      type: object
      properties:
        role_inference:
          properties:
            prior_role:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                links:
                  type: object
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  pattern: '[\S]+'
                description:
                  type: string
                options:
                  type: object
                  properties:
                    immutable:
                      type:
                        - boolean
                        - 'null'
                      enum:
                        - true
                        - false
                        - 
                  additionalProperties: false
            implies:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                links:
                  type: object
                name:
                  type: string
                  minLength: 1
                  maxLength: 255
                  pattern: '[\S]+'
                description:
                  type: string
                options:
                  type: object
                  properties:
                    immutable:
                      type:
                        - boolean
                        - 'null'
                      enum:
                        - true
                        - false
                        - 
                  additionalProperties: false
    S3TokensGetResponse:
      type: object
      description: Response of the s3tokens:get operation
    S3TokensPostRequest:
      type: object
      description: Request of the s3tokens:post operation
    S3TokensPostResponse:
      type: object
      description: Response of the s3tokens:post operation
    ServicePatchRequest:
      type: object
      description: Request of the services/service_id:patch operation
    ServicePatchResponse:
      type: object
      description: Response of the services/service_id:patch operation
    ServiceGetResponse:
      type: object
      description: Response of the services/service_id:get operation
    ServicesGetResponse:
      type: object
      description: Response of the services:get operation
    ServicesPostRequest:
      type: object
      description: Request of the services:post operation
    ServicesPostResponse:
      type: object
      description: Response of the services:post operation
    SystemUsersRolesGetResponse:
      type: object
      description: Response of the system/users/user_id/roles:get operation
    SystemUsersRoleGetResponse:
      type: object
      description: Response of the system/users/user_id/roles/role_id:get operation
    SystemUsersRolePutRequest:
      type: object
      description: Request of the system/users/user_id/roles/role_id:put operation
    SystemUsersRolePutResponse:
      type: object
      description: Response of the system/users/user_id/roles/role_id:put operation
    SystemGroupsRolesGetResponse:
      type: object
      description: Response of the system/groups/group_id/roles:get operation
    SystemGroupsRoleGetResponse:
      type: object
      description: Response of the system/groups/group_id/roles/role_id:get operation
    SystemGroupsRolePutRequest:
      type: object
      description: Request of the system/groups/group_id/roles/role_id:put operation
    SystemGroupsRolePutResponse:
      type: object
      description: Response of the system/groups/group_id/roles/role_id:put operation
    Os_TrustTrustGetResponse:
      type: object
      description: Response of the OS-TRUST/trusts/trust_id:get operation
    Os_TrustTrustsGetResponse:
      type: object
      description: Response of the OS-TRUST/trusts:get operation
    Os_TrustTrustsPostRequest:
      type: object
      description: Request of the OS-TRUST/trusts:post operation
    Os_TrustTrustsPostResponse:
      type: object
      description: Response of the OS-TRUST/trusts:post operation
    Os_TrustTrustsRolesGetResponse:
      type: object
      description: Response of the OS-TRUST/trusts/trust_id/roles:get operation
    Os_TrustTrustsRoleGetResponse:
      type: object
      description: Response of the OS-TRUST/trusts/trust_id/roles/role_id:get operation
    UserPatchRequest:
      type: object
      properties:
        default_project_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        description:
          type:
            - string
            - 'null'
        domain_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        federated:
          type: array
          items:
            type: object
            properties:
              idp_id:
                type: string
              protocols:
                type: array
                items:
                  type: object
                  properties:
                    protocol_id:
                      type: string
                    unique_id:
                      type: string
                  required:
                    - protocol_id
                    - unique_id
                minItems: 1
            required:
              - idp_id
              - protocols
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[\S]+'
        password:
          type:
            - string
            - 'null'
        options:
          type: object
          properties:
            ignore_change_password_upon_first_use:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_password_expiry:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_lockout_failure_attempts:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            lock_password:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_user_inactivity:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            multi_factor_auth_rules:
              type:
                - array
                - 'null'
              items:
                type: array
                items:
                  type: string
                minItems: 1
                uniqueItems: true
              uniqueItems: true
            multi_factor_auth_enabled:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
      additionalProperties: true
      minProperties: 1
      options:
        type: object
    UserPatchResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        default_project_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        description:
          type:
            - string
            - 'null'
        domain_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        federated:
          type: array
          items:
            type: object
            properties:
              idp_id:
                type: string
              protocols:
                type: array
                items:
                  type: object
                  properties:
                    protocol_id:
                      type: string
                    unique_id:
                      type: string
                  required:
                    - protocol_id
                    - unique_id
                minItems: 1
            required:
              - idp_id
              - protocols
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[\S]+'
        password:
          type:
            - string
            - 'null'
        options:
          type: object
          properties:
            ignore_change_password_upon_first_use:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_password_expiry:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_lockout_failure_attempts:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            lock_password:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_user_inactivity:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            multi_factor_auth_rules:
              type:
                - array
                - 'null'
              items:
                type: array
                items:
                  type: string
                minItems: 1
                uniqueItems: true
              uniqueItems: true
            multi_factor_auth_enabled:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
    UserGetResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        default_project_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        description:
          type:
            - string
            - 'null'
        domain_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        federated:
          type: array
          items:
            type: object
            properties:
              idp_id:
                type: string
              protocols:
                type: array
                items:
                  type: object
                  properties:
                    protocol_id:
                      type: string
                    unique_id:
                      type: string
                  required:
                    - protocol_id
                    - unique_id
                minItems: 1
            required:
              - idp_id
              - protocols
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[\S]+'
        password:
          type:
            - string
            - 'null'
        options:
          type: object
          properties:
            ignore_change_password_upon_first_use:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_password_expiry:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_lockout_failure_attempts:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            lock_password:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_user_inactivity:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            multi_factor_auth_rules:
              type:
                - array
                - 'null'
              items:
                type: array
                items:
                  type: string
                minItems: 1
                uniqueItems: true
              uniqueItems: true
            multi_factor_auth_enabled:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
    UsersGetResponse:
      type: object
      properties:
        projects:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
              default_project_id:
                type:
                  - string
                  - 'null'
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
              description:
                type:
                  - string
                  - 'null'
              domain_id:
                type: string
                minLength: 1
                maxLength: 64
                pattern: ^[a-zA-Z0-9-]+$
              enabled:
                type: boolean
                enum:
                  - true
                  - false
                  - 
              federated:
                type: array
                items:
                  type: object
                  properties:
                    idp_id:
                      type: string
                    protocols:
                      type: array
                      items:
                        type: object
                        properties:
                          protocol_id:
                            type: string
                          unique_id:
                            type: string
                        required:
                          - protocol_id
                          - unique_id
                      minItems: 1
                  required:
                    - idp_id
                    - protocols
              name:
                type: string
                minLength: 1
                maxLength: 255
                pattern: '[\S]+'
              password:
                type:
                  - string
                  - 'null'
              options:
                type: object
                properties:
                  ignore_change_password_upon_first_use:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_password_expiry:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_lockout_failure_attempts:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  lock_password:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  ignore_user_inactivity:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                  multi_factor_auth_rules:
                    type:
                      - array
                      - 'null'
                    items:
                      type: array
                      items:
                        type: string
                      minItems: 1
                      uniqueItems: true
                    uniqueItems: true
                  multi_factor_auth_enabled:
                    type:
                      - boolean
                      - 'null'
                    enum:
                      - true
                      - false
                      - 
                additionalProperties: false
    UsersPostRequest:
      type: object
      properties:
        default_project_id:
          type:
            - string
            - 'null'
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        description:
          type:
            - string
            - 'null'
        domain_id:
          type: string
          minLength: 1
          maxLength: 64
          pattern: ^[a-zA-Z0-9-]+$
        enabled:
          type: boolean
          enum:
            - true
            - false
            - 
        federated:
          type: array
          items:
            type: object
            properties:
              idp_id:
                type: string
              protocols:
                type: array
                items:
                  type: object
                  properties:
                    protocol_id:
                      type: string
                    unique_id:
                      type: string
                  required:
                    - protocol_id
                    - unique_id
                minItems: 1
            required:
              - idp_id
              - protocols
        name:
          type: string
          minLength: 1
          maxLength: 255
          pattern: '[\S]+'
        password:
          type:
            - string
            - 'null'
        options:
          type: object
          properties:
            ignore_change_password_upon_first_use:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_password_expiry:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_lockout_failure_attempts:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            lock_password:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            ignore_user_inactivity:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
            multi_factor_auth_rules:
              type:
                - array
                - 'null'
              items:
                type: array
                items:
                  type: string
                minItems: 1
                uniqueItems: true
              uniqueItems: true
            multi_factor_auth_enabled:
              type:
                - boolean
                - 'null'
              enum:
                - true
                - false
                - 
          additionalProperties: false
      additionalProperties: true
      required:
        - name
      options:
        type: object
    UsersPostResponse:
      type: object
      description: Response of the users:post operation
    UsersPasswordGetResponse:
      type: object
      description: Response of the users/user_id/password:get operation
    UsersPasswordPostRequest:
      type: object
      description: Request of the users/user_id/password:post operation
    UsersPasswordPostResponse:
      type: object
      description: Response of the users/user_id/password:post operation
    UsersGroupsGetResponse:
      type: object
      description: Response of the users/user_id/groups:get operation
    UsersProjectsGetResponse:
      type: object
      description: Response of the users/user_id/projects:get operation
    UsersCredentialsOs_Ec2GetResponse:
      type: object
      description: Response of the users/user_id/credentials/OS-EC2:get operation
    UsersCredentialsOs_Ec2PostRequest:
      type: object
      description: Request of the users/user_id/credentials/OS-EC2:post operation
    UsersCredentialsOs_Ec2PostResponse:
      type: object
      description: Response of the users/user_id/credentials/OS-EC2:post operation
    UsersOs_Oauth1Access_TokensGetResponse:
      type: object
      description: Response of the users/user_id/OS-OAUTH1/access_tokens:get operation
    UsersOs_Oauth1Access_TokenGetResponse:
      type: object
      description: Response of the users/user_id/OS-OAUTH1/access_tokens/access_token_id:get
        operation
    UsersOs_Oauth1Access_TokensRolesGetResponse:
      type: object
      description: Response of the users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles:get
        operation
    UsersOs_Oauth1Access_TokensRoleGetResponse:
      type: object
      description: Response of the users/user_id/OS-OAUTH1/access_tokens/access_token_id/roles/role_id:get
        operation
    UsersApplication_CredentialsGetResponse:
      type: object
      description: Response of the users/user_id/application_credentials:get operation
    UsersApplication_CredentialsPostRequest:
      type: object
      description: Request of the users/user_id/application_credentials:post operation
    UsersApplication_CredentialsPostResponse:
      type: object
      description: Response of the users/user_id/application_credentials:post operation
    UsersApplication_CredentialGetResponse:
      type: object
      description: Response of the users/user_id/application_credentials/application_credential_id:get
        operation
    UsersAccess_RulesGetResponse:
      type: object
      description: Response of the users/user_id/access_rules:get operation
    UsersAccess_RuleGetResponse:
      type: object
      description: Response of the users/user_id/access_rules/access_rule_id:get operation
  parameters:
    X-Subject-Token:
      in: header
      name: X-Subject-Token
      description: The authentication token to be verified.
      schema:
        type: string
      required: true
    auth_OS_FEDERATION_websso_protocol_id:
      in: path
      name: protocol_id
      description: |-
        protocol_id parameter for /v3/auth/OS-FEDERATION/websso/{protocol_id} API
      schema:
        type: string
      required: true
    auth_OS_FEDERATION_identity_providers_idp_id:
      in: path
      name: idp_id
      description: |-
        idp_id parameter for /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso API
      schema:
        type: string
      required: true
    auth_OS_FEDERATION_identity_providers_protocols_protocol_id:
      in: path
      name: protocol_id
      description: |-
        protocol_id parameter for /v3/auth/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id}/websso API
      schema:
        type: string
      required: true
    credentials_credential_id:
      in: path
      name: credential_id
      description: |-
        credential_id parameter for /v3/credentials/{credential_id} API
      schema:
        type: string
      required: true
    domains_domain_id:
      in: path
      name: domain_id
      description: |-
        domain_id parameter for /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    domains_config_group:
      in: path
      name: group
      description: |-
        group parameter for /v3/domains/config/{group}/{option}/default API
      schema:
        type: string
      required: true
    domains_config_option:
      in: path
      name: option
      description: |-
        option parameter for /v3/domains/config/{group}/{option}/default API
      schema:
        type: string
      required: true
    domains_users_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/domains/{domain_id}/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    domains_users_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/domains/{domain_id}/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    domains_groups_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    domains_groups_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/domains/{domain_id}/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    endpoints_endpoint_id:
      in: path
      name: endpoint_id
      description: |-
        endpoint_id parameter for /v3/endpoints/{endpoint_id}/OS-ENDPOINT-POLICY/policy API
      schema:
        type: string
      required: true
    groups_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/groups/{group_id}/users/{user_id} API
      schema:
        type: string
      required: true
    groups_users_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/groups/{group_id}/users/{user_id} API
      schema:
        type: string
      required: true
    limits_limit_id:
      in: path
      name: limit_id
      description: |-
        limit_id parameter for /v3/limits/{limit_id} API
      schema:
        type: string
      required: true
    OS_EP_FILTER_endpoint_groups_endpoint_group_id:
      in: path
      name: endpoint_group_id
      description: |-
        endpoint_group_id parameter for /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id} API
      schema:
        type: string
      required: true
    OS_EP_FILTER_endpoints_endpoint_id:
      in: path
      name: endpoint_id
      description: |-
        endpoint_id parameter for /v3/OS-EP-FILTER/endpoints/{endpoint_id}/projects API
      schema:
        type: string
      required: true
    OS_EP_FILTER_projects_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/OS-EP-FILTER/projects/{project_id}/endpoint_groups API
      schema:
        type: string
      required: true
    OS_EP_FILTER_projects_endpoints_endpoint_id:
      in: path
      name: endpoint_id
      description: |-
        endpoint_id parameter for /v3/OS-EP-FILTER/projects/{project_id}/endpoints/{endpoint_id} API
      schema:
        type: string
      required: true
    OS_EP_FILTER_endpoint_groups_projects_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/OS-EP-FILTER/endpoint_groups/{endpoint_group_id}/projects/{project_id} API
      schema:
        type: string
      required: true
    OS_FEDERATION_identity_providers_idp_id:
      in: path
      name: idp_id
      description: |-
        idp_id parameter for /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols API
      schema:
        type: string
      required: true
    OS_FEDERATION_identity_providers_protocols_protocol_id:
      in: path
      name: protocol_id
      description: |-
        protocol_id parameter for /v3/OS-FEDERATION/identity_providers/{idp_id}/protocols/{protocol_id} API
      schema:
        type: string
      required: true
    OS_FEDERATION_mappings_mapping_id:
      in: path
      name: mapping_id
      description: |-
        mapping_id parameter for /v3/OS-FEDERATION/mappings/{mapping_id} API
      schema:
        type: string
      required: true
    OS_FEDERATION_service_providers_sp_id:
      in: path
      name: sp_id
      description: |-
        sp_id parameter for /v3/OS-FEDERATION/service_providers/{sp_id} API
      schema:
        type: string
      required: true
    OS_INHERIT_domains_domain_id:
      in: path
      name: domain_id
      description: |-
        domain_id parameter for /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_domains_groups_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_domains_groups_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-INHERIT/domains/{domain_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_domains_users_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_domains_users_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-INHERIT/domains/{domain_id}/users/{user_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_projects_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_projects_users_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_projects_users_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-INHERIT/projects/{project_id}/users/{user_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_projects_groups_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_INHERIT_projects_groups_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-INHERIT/projects/{project_id}/groups/{group_id}/roles/{role_id}/inherited_to_projects API
      schema:
        type: string
      required: true
    OS_OAUTH1_consumers_consumer_id:
      in: path
      name: consumer_id
      description: |-
        consumer_id parameter for /v3/OS-OAUTH1/consumers/{consumer_id} API
      schema:
        type: string
      required: true
    OS_OAUTH1_authorize_request_token_id:
      in: path
      name: request_token_id
      description: |-
        request_token_id parameter for /v3/OS-OAUTH1/authorize/{request_token_id} API
      schema:
        type: string
      required: true
    policies_policy_id:
      in: path
      name: policy_id
      description: |-
        policy_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_endpoints_endpoint_id:
      in: path
      name: endpoint_id
      description: |-
        endpoint_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/endpoints/{endpoint_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_services_service_id:
      in: path
      name: service_id
      description: |-
        service_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id} API
      schema:
        type: string
      required: true
    policies_OS_ENDPOINT_POLICY_services_regions_region_id:
      in: path
      name: region_id
      description: |-
        region_id parameter for /v3/policies/{policy_id}/OS-ENDPOINT-POLICY/services/{service_id}/regions/{region_id} API
      schema:
        type: string
      required: true
    projects_project_id:
      in: path
      name: project_id
      description: |-
        project_id parameter for /v3/projects/{project_id}/groups/{group_id}/roles API
      schema:
        type: string
      required: true
    projects_tags_value:
      in: path
      name: value
      description: |-
        value parameter for /v3/projects/{project_id}/tags/{value} API
      schema:
        type: string
      required: true
    projects_users_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/projects/{project_id}/users/{user_id}/roles API
      schema:
        type: string
      required: true
    projects_users_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/projects/{project_id}/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    projects_groups_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/projects/{project_id}/groups/{group_id}/roles API
      schema:
        type: string
      required: true
    projects_groups_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/projects/{project_id}/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    regions_region_id:
      in: path
      name: region_id
      description: |-
        region_id parameter for /v3/regions/{region_id} API
      schema:
        type: string
      required: true
    registered_limits_registered_limit_id:
      in: path
      name: registered_limit_id
      description: |-
        registered_limit_id parameter for /v3/registered_limits/{registered_limit_id} API
      schema:
        type: string
      required: true
    roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/roles/{role_id} API
      schema:
        type: string
      required: true
    roles_prior_role_id:
      in: path
      name: prior_role_id
      description: |-
        prior_role_id parameter for /v3/roles/{prior_role_id}/implies/{implied_role_id} API
      schema:
        type: string
      required: true
    roles_implies_implied_role_id:
      in: path
      name: implied_role_id
      description: |-
        implied_role_id parameter for /v3/roles/{prior_role_id}/implies/{implied_role_id} API
      schema:
        type: string
      required: true
    services_service_id:
      in: path
      name: service_id
      description: |-
        service_id parameter for /v3/services/{service_id} API
      schema:
        type: string
      required: true
    system_users_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/system/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    system_users_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/system/users/{user_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    system_groups_group_id:
      in: path
      name: group_id
      description: |-
        group_id parameter for /v3/system/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    system_groups_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/system/groups/{group_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    OS_TRUST_trusts_trust_id:
      in: path
      name: trust_id
      description: |-
        trust_id parameter for /v3/OS-TRUST/trusts/{trust_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    OS_TRUST_trusts_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/OS-TRUST/trusts/{trust_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    users_user_id:
      in: path
      name: user_id
      description: |-
        user_id parameter for /v3/users/{user_id}/access_rules/{access_rule_id} API
      schema:
        type: string
      required: true
    users_credentials_OS_EC2_credential_id:
      in: path
      name: credential_id
      description: |-
        credential_id parameter for /v3/users/{user_id}/credentials/OS-EC2/{credential_id} API
      schema:
        type: string
      required: true
    users_OS_OAUTH1_access_tokens_access_token_id:
      in: path
      name: access_token_id
      description: |-
        access_token_id parameter for /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    users_OS_OAUTH1_access_tokens_roles_role_id:
      in: path
      name: role_id
      description: |-
        role_id parameter for /v3/users/{user_id}/OS-OAUTH1/access_tokens/{access_token_id}/roles/{role_id} API
      schema:
        type: string
      required: true
    users_application_credentials_application_credential_id:
      in: path
      name: application_credential_id
      description: |-
        application_credential_id parameter for /v3/users/{user_id}/application_credentials/{application_credential_id} API
      schema:
        type: string
      required: true
    users_access_rules_access_rule_id:
      in: path
      name: access_rule_id
      description: |-
        access_rule_id parameter for /v3/users/{user_id}/access_rules/{access_rule_id} API
      schema:
        type: string
      required: true
  headers:
    X-Subject-Token:
      description: API Authorization token
      schema:
        type: string
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Auth-Token
tags:
  - name: versions
    description: |
  - name: auth
    description: |
  - name: OS-FEDERATION
    description: |
  - name: credentials
    description: |
  - name: domains
    description: |
  - name: ec2tokens
    description: |
  - name: endpoints
    description: |
  - name: groups
    description: |
  - name: limits
    description: |
  - name: OS-EP-FILTER
    description: |
  - name: OS-INHERIT
    description: |
  - name: OS-OAUTH1
    description: |
  - name: OS-OAUTH2
    description: |
  - name: OS-REVOKE
    description: |
  - name: OS-SIMPLE-CERT
    description: |
  - name: policies
    description: |
  - name: projects
    description: |
  - name: regions
    description: |
  - name: registered_limits
    description: |
  - name: role_assignments
    description: |
  - name: role_inferences
    description: |
  - name: roles
    description: |
  - name: s3tokens
    description: |
  - name: services
    description: |
  - name: system
    description: |
  - name: OS-TRUST
    description: |
  - name: users
    description: |
security:
  - ApiKeyAuth: []
